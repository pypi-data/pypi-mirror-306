import{d as A,B as y,W as b,J as g,f as h,c as w,g as a,h as C,u as k,o as v,k as u,l as e,G as B,H as r,C as D,K as E,L as d,Y as I}from"./index-Dwp0Fnhs.js";import{_ as K}from"./AutomationWizard.vue_vue_type_script_setup_true_lang-foaWgyiS.js";import{u as N}from"./usePageTitle-Dox1eTCY.js";import{u as P}from"./usePrefectApi-Bt0A33pt.js";const $=A({__name:"AutomationEdit",async setup(T){let o,m;const i=P(),c=y(),_=k(),p=b("automationId"),s=([o,m]=g(()=>i.automations.getAutomation(p.value)),o=await o,m(),o);N(`Edit Automation: ${s.name}`);const f=h(()=>[{text:"Automations",to:c.automations()},{text:s.name}]);async function x(l){try{await i.automations.updateAutomation(p.value,l),d(r.success.automationUpdate),_.push(c.automations())}catch(t){console.error(t);const n=I(t,r.error.automationUpdate);d(n,"error",{timeout:!1})}}return(l,t)=>{const n=C("p-layout-default");return v(),w(n,{class:"workspace-automation-create"},{header:a(()=>[u(e(E),{crumbs:f.value},{actions:a(()=>[u(e(B),{to:e(r).docs.automations},{default:a(()=>t[0]||(t[0]=[D(" Documentation ")])),_:1},8,["to"])]),_:1},8,["crumbs"])]),default:a(()=>[u(K,{automation:e(s),editing:"",onSubmit:x},null,8,["automation"])]),_:1})}}});export{$ as default};
//# sourceMappingURL=AutomationEdit-DO0fYU_e.js.map
