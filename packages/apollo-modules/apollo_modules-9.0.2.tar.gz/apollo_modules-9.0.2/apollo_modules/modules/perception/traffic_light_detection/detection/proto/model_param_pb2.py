# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: modules/perception/traffic_light_detection/detection/proto/model_param.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from apollo_modules.modules.perception.common.proto import model_info_pb2 as modules_dot_perception_dot_common_dot_proto_dot_model__info__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nLmodules/perception/traffic_light_detection/detection/proto/model_param.proto\x12\x1e\x61pollo.perception.trafficlight\x1a\x30modules/perception/common/proto/model_info.proto\"\xf9\x01\n\nModelParam\x12\x31\n\x04info\x18\x01 \x01(\x0b\x32#.apollo.perception.common.ModelInfo\x12\x1a\n\rmin_crop_size\x18\x02 \x01(\x05:\x03\x32\x37\x30\x12\x16\n\x0b\x63rop_method\x18\x03 \x01(\x05:\x01\x30\x12\x12\n\x06mean_b\x18\x04 \x01(\x02:\x02\x39\x35\x12\x12\n\x06mean_g\x18\x05 \x01(\x02:\x02\x39\x39\x12\x12\n\x06mean_r\x18\x06 \x01(\x02:\x02\x39\x36\x12\x14\n\x06is_bgr\x18\x07 \x01(\x08:\x04true\x12\x17\n\ncrop_scale\x18\x08 \x01(\x02:\x03\x32.5\x12\x19\n\x0emax_batch_size\x18\t \x01(\x05:\x01\x31')



_MODELPARAM = DESCRIPTOR.message_types_by_name['ModelParam']
ModelParam = _reflection.GeneratedProtocolMessageType('ModelParam', (_message.Message,), {
  'DESCRIPTOR' : _MODELPARAM,
  '__module__' : 'modules.perception.traffic_light_detection.detection.proto.model_param_pb2'
  # @@protoc_insertion_point(class_scope:apollo.perception.trafficlight.ModelParam)
  })
_sym_db.RegisterMessage(ModelParam)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _MODELPARAM._serialized_start=163
  _MODELPARAM._serialized_end=412
# @@protoc_insertion_point(module_scope)
