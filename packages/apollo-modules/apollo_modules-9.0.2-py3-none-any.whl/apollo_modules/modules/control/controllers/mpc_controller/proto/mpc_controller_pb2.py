# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: modules/control/controllers/mpc_controller/proto/mpc_controller.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from apollo_modules.modules.control.control_component.proto import gain_scheduler_conf_pb2 as modules_dot_control_dot_control__component_dot_proto_dot_gain__scheduler__conf__pb2
from apollo_modules.modules.control.control_component.proto import leadlag_conf_pb2 as modules_dot_control_dot_control__component_dot_proto_dot_leadlag__conf__pb2
from apollo_modules.modules.control.control_component.proto import pid_conf_pb2 as modules_dot_control_dot_control__component_dot_proto_dot_pid__conf__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nEmodules/control/controllers/mpc_controller/proto/mpc_controller.proto\x12\x0e\x61pollo.control\x1a\x41modules/control/control_component/proto/gain_scheduler_conf.proto\x1a:modules/control/control_component/proto/leadlag_conf.proto\x1a\x36modules/control/control_component/proto/pid_conf.proto\"!\n\nFilterConf\x12\x13\n\x0b\x63utoff_freq\x18\x01 \x01(\x05\"\x86\r\n\x11MPCControllerConf\x12\n\n\x02ts\x18\x01 \x01(\x01\x12\n\n\x02\x63\x66\x18\x02 \x01(\x01\x12\n\n\x02\x63r\x18\x03 \x01(\x01\x12\x0f\n\x07mass_fl\x18\x04 \x01(\x05\x12\x0f\n\x07mass_fr\x18\x05 \x01(\x05\x12\x0f\n\x07mass_rl\x18\x06 \x01(\x05\x12\x0f\n\x07mass_rr\x18\x07 \x01(\x05\x12\x0b\n\x03\x65ps\x18\x08 \x01(\x01\x12\x10\n\x08matrix_q\x18\t \x03(\x01\x12\x10\n\x08matrix_r\x18\n \x03(\x01\x12\x13\n\x0b\x63utoff_freq\x18\x0b \x01(\x05\x12\x1f\n\x17mean_filter_window_size\x18\x0c \x01(\x05\x12\x15\n\rmax_iteration\x18\r \x01(\x05\x12 \n\x18max_lateral_acceleration\x18\x0e \x01(\x01\x12\x1f\n\x17standstill_acceleration\x18\x0f \x01(\x01\x12\x1c\n\x14\x62rake_minimum_action\x18\x10 \x01(\x01\x12\x1f\n\x17throttle_minimum_action\x18\x11 \x01(\x01\x12=\n\x16lat_err_gain_scheduler\x18\x12 \x01(\x0b\x32\x1d.apollo.control.GainScheduler\x12\x41\n\x1aheading_err_gain_scheduler\x18\x13 \x01(\x0b\x32\x1d.apollo.control.GainScheduler\x12\x42\n\x1bsteer_weight_gain_scheduler\x18\x14 \x01(\x0b\x32\x1d.apollo.control.GainScheduler\x12\x45\n\x1e\x66\x65\x65\x64\x66orwardterm_gain_scheduler\x18\x15 \x01(\x0b\x32\x1d.apollo.control.GainScheduler\x12\x32\n#enable_mpc_feedforward_compensation\x18\x17 \x01(\x08:\x05\x66\x61lse\x12(\n unconstrained_control_diff_limit\x18\x18 \x01(\x01\x12%\n\x1duse_lqr_curvature_feedforward\x18\x19 \x01(\x08\x12\x13\n\x0buse_preview\x18\x1a \x01(\x08\x12\x34\n\x13\x61\x63\x63_lookup_pid_conf\x18\x1b \x01(\x0b\x32\x17.apollo.control.PidConf\x12\x1a\n\x12use_lookup_acc_pid\x18\x1c \x01(\x08\x12\x1e\n\x16use_pitch_angle_filter\x18\x1d \x01(\x08\x12-\n\x1e\x65nable_look_ahead_back_control\x18\x1e \x01(\x08:\x05\x66\x61lse\x12\x14\n\x0cswitch_speed\x18\x1f \x01(\x01\x12\x39\n\x14reverse_leadlag_conf\x18  \x01(\x0b\x32\x1b.apollo.control.LeadlagConf\x12\x1e\n\x13switch_speed_window\x18! \x01(\x01:\x01\x30\x12\x16\n\x0epreview_window\x18\" \x01(\x05\x12\x1c\n\x11lookahead_station\x18# \x01(\x01:\x01\x30\x12\x1b\n\x10lookback_station\x18$ \x01(\x01:\x01\x30\x12\'\n\x1clookahead_station_high_speed\x18% \x01(\x01:\x01\x30\x12&\n\x1blookback_station_high_speed\x18& \x01(\x01:\x01\x30\x12\x32\n#enable_reverse_leadlag_compensation\x18\' \x01(\x08:\x05\x66\x61lse\x12;\n\x17pitch_angle_filter_conf\x18( \x01(\x0b\x32\x1a.apollo.control.FilterConf\x12\x34\n%enable_feedback_augment_on_high_speed\x18) \x01(\x08:\x05\x66\x61lse\x12\x32\n#trajectory_transform_to_com_reverse\x18* \x01(\x08:\x05\x66\x61lse\x12\x30\n!trajectory_transform_to_com_drive\x18+ \x01(\x08:\x05\x66\x61lse\x12\"\n\x13\x65nable_slope_offset\x18, \x01(\x08:\x05\x66\x61lse\x12*\n\x1buse_preview_reference_check\x18- \x01(\x08:\x05\x66\x61lse\x12\x1b\n\x13use_kinematic_model\x18. \x01(\x08\x12\x32\n#enable_navigation_mode_error_filter\x18/ \x01(\x08:\x05\x66\x61lse')



_FILTERCONF = DESCRIPTOR.message_types_by_name['FilterConf']
_MPCCONTROLLERCONF = DESCRIPTOR.message_types_by_name['MPCControllerConf']
FilterConf = _reflection.GeneratedProtocolMessageType('FilterConf', (_message.Message,), {
  'DESCRIPTOR' : _FILTERCONF,
  '__module__' : 'modules.control.controllers.mpc_controller.proto.mpc_controller_pb2'
  # @@protoc_insertion_point(class_scope:apollo.control.FilterConf)
  })
_sym_db.RegisterMessage(FilterConf)

MPCControllerConf = _reflection.GeneratedProtocolMessageType('MPCControllerConf', (_message.Message,), {
  'DESCRIPTOR' : _MPCCONTROLLERCONF,
  '__module__' : 'modules.control.controllers.mpc_controller.proto.mpc_controller_pb2'
  # @@protoc_insertion_point(class_scope:apollo.control.MPCControllerConf)
  })
_sym_db.RegisterMessage(MPCControllerConf)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _FILTERCONF._serialized_start=272
  _FILTERCONF._serialized_end=305
  _MPCCONTROLLERCONF._serialized_start=308
  _MPCCONTROLLERCONF._serialized_end=1978
# @@protoc_insertion_point(module_scope)
