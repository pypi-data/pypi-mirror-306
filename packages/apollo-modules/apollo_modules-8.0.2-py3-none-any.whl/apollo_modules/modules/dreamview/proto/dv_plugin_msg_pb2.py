# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: modules/dreamview/proto/dv_plugin_msg.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from apollo_modules.modules.common_msgs.basic_msgs import header_pb2 as modules_dot_common__msgs_dot_basic__msgs_dot_header__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n+modules/dreamview/proto/dv_plugin_msg.proto\x12\x10\x61pollo.dreamview\x1a+modules/common_msgs/basic_msgs/header.proto\"\x9e\x02\n\x0b\x44vPluginMsg\x12%\n\x06header\x18\x01 \x01(\x0b\x32\x15.apollo.common.Header\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0c\n\x04info\x18\x03 \x01(\t\x12\x0e\n\x06source\x18\x04 \x01(\t\x12\x0e\n\x06target\x18\x05 \x01(\t\x12@\n\x0bsource_type\x18\x06 \x01(\x0e\x32+.apollo.dreamview.DvPluginMsg.ComponentType\x12@\n\x0btarget_type\x18\x07 \x01(\x0e\x32+.apollo.dreamview.DvPluginMsg.ComponentType\"(\n\rComponentType\x12\n\n\x06module\x10\x00\x12\x0b\n\x07plugins\x10\x01')



_DVPLUGINMSG = DESCRIPTOR.message_types_by_name['DvPluginMsg']
_DVPLUGINMSG_COMPONENTTYPE = _DVPLUGINMSG.enum_types_by_name['ComponentType']
DvPluginMsg = _reflection.GeneratedProtocolMessageType('DvPluginMsg', (_message.Message,), {
  'DESCRIPTOR' : _DVPLUGINMSG,
  '__module__' : 'modules.dreamview.proto.dv_plugin_msg_pb2'
  # @@protoc_insertion_point(class_scope:apollo.dreamview.DvPluginMsg)
  })
_sym_db.RegisterMessage(DvPluginMsg)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _DVPLUGINMSG._serialized_start=111
  _DVPLUGINMSG._serialized_end=397
  _DVPLUGINMSG_COMPONENTTYPE._serialized_start=357
  _DVPLUGINMSG_COMPONENTTYPE._serialized_end=397
# @@protoc_insertion_point(module_scope)
