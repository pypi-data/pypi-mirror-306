"use strict";(self.webpackChunk_datalayer_core=self.webpackChunk_datalayer_core||[]).push([[299],{299:(e,t,n)=>{n.r(t),n.d(t,{ExerciseNew:()=>x,default:()=>m});var o=n(74512),r=n(66029),s=n(40809),i=n(23189),a=n(9750),l=n(41877),c=n.n(l);function d(e){const t=c()(e);if(0===t)return e;const n=new RegExp(`^[ \\t]{${t}}`,"gm");return e.replace(n,"")}var h=n(18440),u=n(53133),p=n(69058);const x=()=>{const e=(0,u.aF)(),t=(0,p.qX)(),n=(0,p.Ae)(),l=(0,a.useOutputsStore)(),c=(0,u.s0)(),{enqueueToast:x}=(0,u.pm)(),{kernelManager:m,defaultKernel:g}=(0,a.useJupyter)(),j=t.layout().leftSidebarVariant,C=t.layout().organization,b=t.layout().space,v=(0,r.useMemo)((()=>g),[m]),{getSpaceDatasets:f,refreshSpaceDatasets:F}=(0,u.YT)(),[y,w]=(0,r.useState)(f()),T=l.outputs?.get("exercise-pre")?.input,k=l.outputs?.get("exercise-solution")?.input,S=l.outputs?.get("exercise-question")?.input,E=l.outputs?.get("exercise-test")?.input,[L,_]=(0,r.useState)({name:void 0,description:void 0,help:'Use the assignment operator "=" to create the variable "x".'}),[D,$]=(0,r.useState)({name:void 0,description:void 0,help:!0});(0,r.useEffect)((()=>{b&&F(b,C).then((e=>{e.success&&w(f())}))}),[b]),(0,r.useEffect)((()=>{$({...D,name:void 0===L.name?void 0:L.name.length>2,description:void 0===L.description?void 0:L.description.length>2,help:void 0===L.help?void 0:L.help.length>2})}),[L]);const{isLoading:q,isSuccess:B,uploadAndSubmit:R,progress:V}=(0,u.Wy)(`${n.configuration.spacerRunUrl}/api/spacer/v1/exercises`);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.Pagehead,{children:(0,o.jsx)(s.Heading,{sx:{fontSize:3},children:"New Exercise"})}),(0,o.jsxs)(s.Box,{children:[(0,o.jsxs)(s.Box,{sx:{label:{marginTop:2},"label + span":{marginBottom:2}},children:[(0,o.jsxs)(s.FormControl,{children:[(0,o.jsx)(s.FormControl.Label,{children:"Name"}),(0,o.jsx)(s.FormControl.Caption,{children:"Name of the exercise."}),(0,o.jsx)(s.TextInput,{block:!0,value:L.name,onChange:e=>{_((t=>({...t,name:e.target.value})))}}),!1===D.name&&(0,o.jsx)(s.FormControl.Validation,{variant:"error",children:"Name must have more than 2 characters."})]}),(0,o.jsxs)(s.FormControl,{children:[(0,o.jsx)(s.FormControl.Label,{children:"Description"}),(0,o.jsx)(s.FormControl.Caption,{children:"Description of the exercise."}),(0,o.jsx)(s.Textarea,{block:!0,value:L.description,onChange:e=>{_((t=>({...t,description:e.target.value})))}}),!1===D.description&&(0,o.jsx)(s.FormControl.Validation,{variant:"error",children:"Description must have more than 2 characters."})]}),(0,o.jsxs)(s.Box,{display:"grid",gridTemplateColumns:"1fr 1fr",gridGap:3,children:[(0,o.jsxs)(s.Box,{children:[(0,o.jsxs)(s.FormControl,{children:[(0,o.jsx)(s.FormControl.Label,{children:"Preliminary code"}),(0,o.jsx)(s.FormControl.Caption,{children:"This is the preliminary code that will be run before the exercise is taken."})]}),(0,o.jsx)(a.Output,{showEditor:!0,autoRun:!0,kernel:v,code:"# Insert your preliminary code here.",id:"exercise-pre"})]}),(0,o.jsxs)(s.Box,{children:[(0,o.jsxs)(s.FormControl,{children:[(0,o.jsx)(s.FormControl.Label,{children:"Datasets"}),(0,o.jsx)(s.FormControl.Caption,{children:"Select the datasets to be used in the prelimary code."})]}),(0,o.jsx)(s.ActionList,{showDividers:!0,role:"listbox","aria-label":"Select assignees",children:y.map((e=>(0,o.jsxs)(s.ActionList.Item,{role:"option",onClick:t=>{t.preventDefault(),l.setDataset("exercise-pre",e)},children:[(0,o.jsx)(s.ActionList.LeadingVisual,{children:(0,o.jsx)(i.VHe,{})}),e.name,(0,o.jsxs)(s.ActionList.Description,{children:[e.mimeType," ",(0,h.Aq)(e.description)]})]},e.id)))})]})]}),(0,o.jsxs)(s.FormControl,{children:[(0,o.jsx)(s.FormControl.Label,{children:"Solution Code"}),(0,o.jsx)(s.FormControl.Caption,{children:"This is the expected solution code. The student will never see this content."})]}),(0,o.jsx)(a.Output,{showEditor:!0,autoRun:!0,kernel:v,id:"exercise-solution",code:"# Create a variable x, equals to 3.\nx = 3\n\n# Print x.\nprint(x)"}),(0,o.jsxs)(s.FormControl,{children:[(0,o.jsx)(s.FormControl.Label,{children:"Question code"}),(0,o.jsx)(s.FormControl.Caption,{children:"This the question code that will be shown to the student."})]}),(0,o.jsx)(a.Output,{showEditor:!0,autoRun:!1,kernel:v,id:"exercise-question",code:d("# Create a variable x, equals to 3.\n...\n\n# Print x.\n...\n").trim()}),(0,o.jsx)(s.Box,{children:(0,o.jsxs)(s.FormControl,{children:[(0,o.jsx)(s.FormControl.Label,{children:"Help for the student"}),(0,o.jsx)(s.FormControl.Caption,{children:"This a help that will be shown to the student if he asks for it."}),(0,o.jsx)(s.Textarea,{block:!0,value:L.help,onChange:e=>{_((t=>({...t,help:e.target.value})))}}),!1===D.help&&(0,o.jsx)(s.FormControl.Validation,{variant:"error",children:"Help must have more than 2 characters"})]})}),(0,o.jsxs)(s.FormControl,{children:[(0,o.jsx)(s.FormControl.Label,{children:"Test the Solution code"}),(0,o.jsxs)(s.FormControl.Caption,{children:["Write the test code that will be run on the student's code during the exercise. Please refer to the ",(0,o.jsx)(s.Link,{href:"https://nbgrader.readthedocs.io/en/latest/user_guide/autograding_resources.html",target:"_blank",children:"nbgrader"})," documentation."]})]}),(0,o.jsx)(a.Output,{showEditor:!0,autoRun:!1,disableRun:!0,kernel:v,id:"exercise-test",code:'Ex().check_object("x")\nEx().check_object("x").has_equal_value()\nEx().has_output("3")\nprint(\'Congratulations. You have successfully passed this exercise.\')'})]}),(0,o.jsx)(s.Text,{as:"p",color:"fg.onEmphasis",bg:"neutral.emphasis",p:2,children:'Validate you tests with this button. It will run the "Preliminary code", then will run the "Test code" on the "Solution code". When a student will take the exercise, the "Test code" will be run on the "Student code".'}),(0,o.jsx)(s.Button,{variant:"danger",leadingVisual:i.Zi2,sx:{marginTop:2,marginBottom:2},onClick:e=>{e.preventDefault(),l.setExecuteRequest("exercise-test",`\nsetup_state(stu_code = """${T}\n${k}""", sol_code = """${T}\n${k}""")\n${E}\n`)},children:"Test"}),(0,o.jsx)(s.Text,{as:"p",color:"fg.onEmphasis",bg:"neutral.emphasis",p:2,children:"Once you are confident with your test, you can create the exercise. Don't worry, you can still update it before making it public."}),(0,o.jsx)(s.Button,{variant:"primary",disabled:q||!D.name||!D.description,sx:{marginTop:2},onClick:async()=>{const n=new FormData;n.append("name",L.name),n.append("description",L.description),n.append("help",L.help),n.append("codePre",T??""),n.append("codeSolution",k??""),n.append("codeQuestion",S??""),n.append("codeTest",E??""),n.append("accountType","organization-space"===j?"organization":"user"),n.append("accountId","organization-space"===j?C?.id:e?.id),n.append("spaceId",b?.id),R(n).then((n=>{n.success&&(x("The exercise has been created.",{variant:"success"}),"organization"===j||"organization-space"===j?(c(`/${C?.handle}/${b?.handle}/exercise/${n.exercise.uid}`),t.layout().triggerItemsRefresh()):c(`/${e?.handle}/${b?.handle}/exercises`))}))},children:"Create an exercise"})]})]})},m=x},41877:e=>{e.exports=e=>{const t=e.match(/^[ \t]*(?=\S)/gm);return t?t.reduce(((e,t)=>Math.min(e,t.length)),1/0):0}}}]);