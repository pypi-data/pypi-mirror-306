# Generated by Django 5.0.6 on 2024-10-16 23:22

import uuid

import django.contrib.auth.validators
import django.contrib.postgres.fields
import django.utils.timezone
from django.db import migrations, models

import pycorpkit.accountx.models.permission


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Invitation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("created", models.DateTimeField(default=django.utils.timezone.now)),
                ("created_by", models.UUIDField(blank=True, null=True)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("email", models.EmailField(max_length=254)),
                ("accepted_invitation", models.BooleanField(default=False)),
                ("accepted_time", models.DateTimeField(blank=True, null=True)),
                ("invitation_sent", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ("-updated", "-created"),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Permissions",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("created", models.DateTimeField(default=django.utils.timezone.now)),
                ("created_by", models.UUIDField(blank=True, null=True)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(db_index=True, max_length=200, unique=True)),
                ("description", models.TextField()),
                ("is_deprecated", models.BooleanField(default=False)),
                ("is_system_level", models.BooleanField(default=False)),
                (
                    "children",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200),
                        blank=True,
                        null=True,
                        size=None,
                        validators=[
                            pycorpkit.accountx.models.permission.validate_array_unique
                        ],
                    ),
                ),
            ],
            options={
                "ordering": ("-updated", "-created"),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("created", models.DateTimeField(default=django.utils.timezone.now)),
                ("created_by", models.UUIDField(blank=True, null=True)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(db_index=True, max_length=200)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "role_type",
                    models.CharField(
                        choices=[("SYSTEM", "System"), ("CUSTOM", "Custom")],
                        default="SYSTEM",
                        max_length=16,
                    ),
                ),
            ],
            options={
                "ordering": ("-updated", "-created"),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RolePermission",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("created", models.DateTimeField(default=django.utils.timezone.now)),
                ("created_by", models.UUIDField(blank=True, null=True)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "ordering": ("-updated", "-created"),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserRole",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("created", models.DateTimeField(default=django.utils.timezone.now)),
                ("created_by", models.UUIDField(blank=True, null=True)),
                ("updated", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        db_index=True,
                        max_length=254,
                        unique=True,
                        verbose_name="email address",
                    ),
                ),
                ("is_suspended", models.BooleanField(default=False)),
                ("agreed_to_terms", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=False)),
                (
                    "verify_code",
                    models.CharField(
                        blank=True,
                        editable=False,
                        help_text="User account verification code.",
                        max_length=512,
                        null=True,
                    ),
                ),
                (
                    "verify_code_expire",
                    models.DateTimeField(
                        blank=True,
                        editable=False,
                        help_text="Verification  code expire date.",
                        max_length=512,
                        null=True,
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "change_pass_at_next_login",
                    models.BooleanField(
                        default=False, verbose_name="Change password at next login"
                    ),
                ),
                ("is_system_user", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
    ]
