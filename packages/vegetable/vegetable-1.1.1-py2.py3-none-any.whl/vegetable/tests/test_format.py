import unittest

from vegetable.format import *

class TestFormats(unittest.TestCase):
    def test_string(self):
        l6 = StringFormatter(6, "L")
        l12 = StringFormatter(12, "L")
        r6 = StringFormatter(6, "R")
        r12 = StringFormatter(12, "R")
        c6 = StringFormatter(6, "C")
        c12 = StringFormatter(12, "C")
        l12f = StringFormatter(12, "L", fill='-')

        self.assertEqual( l6("apples"), "apples")
        self.assertEqual( l6("a"), "a     ")
        self.assertEqual( l6(""), "      ")
        self.assertEqual( l6("oranges"), "oranges")
        self.assertEqual(l12("apples"), "apples      ")
        self.assertEqual(l12("a"), "a           ")
        self.assertEqual(l12(""), "            ")
        self.assertEqual(l12("oranges"), "oranges     ")
        self.assertEqual(r6("apples"), "apples")
        self.assertEqual(r6("a"), "     a")
        self.assertEqual(r6(""), "      ")
        self.assertEqual(r6("oranges"), "oranges")
        self.assertEqual(r12("apples"), "      apples")
        self.assertEqual(r12("a"), "           a")
        self.assertEqual(r12(""), "            ")
        self.assertEqual(r12("oranges"), "     oranges")
        self.assertEqual(c6("apples"), "apples")
        self.assertEqual(c6("a"), "  a   ")
        self.assertEqual(c6(""), "      ")
        self.assertEqual(c6("oranges"), "oranges")
        self.assertEqual(c12("apples"), "   apples   ")
        self.assertEqual(c12("a"), "     a      ")
        self.assertEqual(c12(""), "            ")
        self.assertEqual(c12("oranges"), "  oranges   ")
        self.assertEqual(l12f("apples"), "apples------")
        self.assertEqual(l12f("a"), "a-----------")
        self.assertEqual(l12f(""), "------------")
        self.assertEqual(l12f("oranges"), "oranges-----")

    def test_float(self):
        f1b = FloatFormatter(12, scale=3)
        f1t = FloatFormatter(12, scale=3, thousands=True)
        f1f = FloatFormatter(12, scale=3, fill="0")
        f1p = FloatFormatter(12, scale=3, plus=True)
        f1a = FloatFormatter(16, scale=1, plus=True, thousands=True, fill="0")
        self.assertEqual(f1b(808808.808808), "  808808.809")
        self.assertEqual(f1b(8808.808808), "    8808.809")
        self.assertEqual(f1b(8808.80), "    8808.800")
        self.assertEqual(f1b(-8808.80), "   -8808.800")
        self.assertEqual(f1t(808808.808808), " 808,808.809")
        self.assertEqual(f1t(8808.808808), "   8,808.809")
        self.assertEqual(f1t(-8808.808808), "  -8,808.809")
        self.assertEqual(f1t(8808.80), "   8,808.800")
        self.assertEqual(f1f(-808808.808808), "-0808808.809")
        self.assertEqual(f1f(808808.808808), "00808808.809")
        self.assertEqual(f1f(8808.808808), "00008808.809")
        self.assertEqual(f1f(8808.80), "00008808.800")
        self.assertEqual(f1p(808808.808808), " +808808.809")
        self.assertEqual(f1p(8808.808808), "   +8808.809")
        self.assertEqual(f1p(-8808.808808), "   -8808.809")
        self.assertEqual(f1p(8808.80), "   +8808.800")
        self.assertEqual(f1a(1.0), "+0,000,000,001.0")
        self.assertEqual(f1a(12345678.999), "+0,012,345,679.0")

    def test_int(self):
        i1 = IntFormatter(width=9)
        i1p = IntFormatter(width=9, plus=True)
        i1t = IntFormatter(width=9, thousands=True)
        self.assertEqual(i1(808),        "      808")
        self.assertEqual(i1(808808),     "   808808")
        self.assertEqual(i1(808808808),  "808808808")
        self.assertEqual(i1(8088088088), "8088088088")
        self.assertEqual(i1p(808),        "     +808")
        self.assertEqual(i1p(808808),     "  +808808")
        self.assertEqual(i1p(808808808),  "+808808808")
        self.assertEqual(i1p(8088088088), "+8088088088")
        self.assertEqual(i1t(808),        "      808")
        self.assertEqual(i1t(808808),     "  808,808")
        self.assertEqual(i1t(808808808),  "808,808,808")
        self.assertEqual(i1t(8088088088), "8,088,088,088")




