from tiramisu import *
from tiramisu.setting import ALLOWED_LEADER_PROPERTIES
from re import compile as re_compile
from rougail.tiramisu import func, dict_env, load_functions, ConvertDynOptionDescription
load_functions('tests/dictionaries/../eosfunc/test.py')
try:
    groups.namespace
except:
    groups.addgroup('namespace')
ALLOWED_LEADER_PROPERTIES.add("basic")
ALLOWED_LEADER_PROPERTIES.add("standard")
ALLOWED_LEADER_PROPERTIES.add("advanced")
dict_env['hidden_1.rougail.family.variable'] = "{% if rougail.condition2 %}\ncondition2 is true\n{% endif %}\n"
dict_env['frozen_1.rougail.family.variable'] = "{% if not rougail.condition1 %}\ncondition1 is false\n{% endif %}\n"
dict_env['frozen_1.rougail.family.variable_0'] = "{% if rougail.condition2 %}\ncondition2 is true\n{% endif %}\n"
dict_env['hidden_1.rougail.family'] = "{% if not rougail.condition1 %}\ncondition1 is false\n{% endif %}\n"
dict_env['hidden_2.rougail.family.variable'] = "{% if rougail.condition2 %}\ncondition2 is true\n{% endif %}\n"
dict_env['frozen_2.rougail.family.variable'] = "{% if not rougail.condition1 %}\ncondition1 is false\n{% endif %}\n"
dict_env['frozen_2.rougail.family.variable_0'] = "{% if rougail.condition2 %}\ncondition2 is true\n{% endif %}\n"
dict_env['hidden_2.rougail.family'] = "{% if not rougail.condition1 %}\ncondition1 is false\n{% endif %}\n"
option_3 = BoolOption(name="condition1", doc="a first conditional variable", default=False, properties=frozenset({"mandatory", "standard"}), informations={'type': 'boolean'})
option_4 = BoolOption(name="condition2", doc="a second conditional variable", default=False, properties=frozenset({"mandatory", "standard"}), informations={'type': 'boolean'})
option_6 = StrOption(name="variable", doc="a variable", properties=frozenset({"force_default_on_freeze", "standard", Calculation(func['jinja_to_property'], Params((ParamValue("hidden")), kwargs={'__internal_jinja': ParamValue("hidden_1.rougail.family.variable"), '__internal_type': ParamValue("string"), '__internal_multi': ParamValue(False), '__internal_files': ParamValue(['tests/dictionaries/24_0family_hidden_condition_with_variable/dictionaries/rougail/00-base.yml']), '__internal_attribute': ParamValue("hidden"), '__internal_variable': ParamValue("1.rougail.family.variable"), 'when': ParamValue(True), 'inverse': ParamValue(False), 'rougail.condition2': ParamOption(option_4, notraisepropertyerror=True)}), help_function=func['jinja_to_property_help']), Calculation(func['jinja_to_property'], Params((ParamValue("frozen")), kwargs={'__internal_jinja': ParamValue("frozen_1.rougail.family.variable"), '__internal_type': ParamValue("string"), '__internal_multi': ParamValue(False), '__internal_files': ParamValue(['tests/dictionaries/24_0family_hidden_condition_with_variable/dictionaries/rougail/00-base.yml']), '__internal_attribute': ParamValue("frozen"), '__internal_variable': ParamValue("1.rougail.family.variable"), 'when': ParamValue(True), 'inverse': ParamValue(False), 'rougail.condition1': ParamOption(option_3, notraisepropertyerror=True)}), help_function=func['jinja_to_property_help']), Calculation(func['jinja_to_property'], Params((ParamValue("frozen")), kwargs={'__internal_jinja': ParamValue("frozen_1.rougail.family.variable_0"), '__internal_type': ParamValue("string"), '__internal_multi': ParamValue(False), '__internal_files': ParamValue(['tests/dictionaries/24_0family_hidden_condition_with_variable/dictionaries/rougail/00-base.yml']), '__internal_attribute': ParamValue("frozen"), '__internal_variable': ParamValue("1.rougail.family.variable"), 'when': ParamValue(True), 'inverse': ParamValue(False), 'rougail.condition2': ParamOption(option_4, notraisepropertyerror=True)}), help_function=func['jinja_to_property_help'])}), informations={'type': 'string'})
optiondescription_5 = OptionDescription(name="family", doc="a family", children=[option_6], properties=frozenset({"standard", Calculation(func['jinja_to_property'], Params((ParamValue("hidden")), kwargs={'__internal_jinja': ParamValue("hidden_1.rougail.family"), '__internal_type': ParamValue("string"), '__internal_multi': ParamValue(False), '__internal_files': ParamValue(['tests/dictionaries/24_0family_hidden_condition_with_variable/dictionaries/rougail/00-base.yml']), '__internal_attribute': ParamValue("hidden"), '__internal_variable': ParamValue("1.rougail.family"), 'when': ParamValue(True), 'inverse': ParamValue(False), 'rougail.condition1': ParamOption(option_3, notraisepropertyerror=True)}), help_function=func['jinja_to_property_help'])}))
optiondescription_2 = OptionDescription(name="rougail", doc="Rougail", group_type=groups.namespace, children=[option_3, option_4, optiondescription_5], properties=frozenset({"standard"}))
optiondescription_1 = OptionDescription(name="1", doc="1", children=[optiondescription_2], properties=frozenset({"standard"}))
option_9 = BoolOption(name="condition1", doc="a first conditional variable", default=False, properties=frozenset({"mandatory", "standard"}), informations={'type': 'boolean'})
option_10 = BoolOption(name="condition2", doc="a second conditional variable", default=False, properties=frozenset({"mandatory", "standard"}), informations={'type': 'boolean'})
option_12 = StrOption(name="variable", doc="a variable", properties=frozenset({"force_default_on_freeze", "standard", Calculation(func['jinja_to_property'], Params((ParamValue("hidden")), kwargs={'__internal_jinja': ParamValue("hidden_2.rougail.family.variable"), '__internal_type': ParamValue("string"), '__internal_multi': ParamValue(False), '__internal_files': ParamValue(['tests/dictionaries/24_0family_hidden_condition_with_variable/dictionaries/rougail/00-base.yml']), '__internal_attribute': ParamValue("hidden"), '__internal_variable': ParamValue("2.rougail.family.variable"), 'when': ParamValue(True), 'inverse': ParamValue(False), 'rougail.condition2': ParamOption(option_10, notraisepropertyerror=True)}), help_function=func['jinja_to_property_help']), Calculation(func['jinja_to_property'], Params((ParamValue("frozen")), kwargs={'__internal_jinja': ParamValue("frozen_2.rougail.family.variable"), '__internal_type': ParamValue("string"), '__internal_multi': ParamValue(False), '__internal_files': ParamValue(['tests/dictionaries/24_0family_hidden_condition_with_variable/dictionaries/rougail/00-base.yml']), '__internal_attribute': ParamValue("frozen"), '__internal_variable': ParamValue("2.rougail.family.variable"), 'when': ParamValue(True), 'inverse': ParamValue(False), 'rougail.condition1': ParamOption(option_9, notraisepropertyerror=True)}), help_function=func['jinja_to_property_help']), Calculation(func['jinja_to_property'], Params((ParamValue("frozen")), kwargs={'__internal_jinja': ParamValue("frozen_2.rougail.family.variable_0"), '__internal_type': ParamValue("string"), '__internal_multi': ParamValue(False), '__internal_files': ParamValue(['tests/dictionaries/24_0family_hidden_condition_with_variable/dictionaries/rougail/00-base.yml']), '__internal_attribute': ParamValue("frozen"), '__internal_variable': ParamValue("2.rougail.family.variable"), 'when': ParamValue(True), 'inverse': ParamValue(False), 'rougail.condition2': ParamOption(option_10, notraisepropertyerror=True)}), help_function=func['jinja_to_property_help'])}), informations={'type': 'string'})
optiondescription_11 = OptionDescription(name="family", doc="a family", children=[option_12], properties=frozenset({"standard", Calculation(func['jinja_to_property'], Params((ParamValue("hidden")), kwargs={'__internal_jinja': ParamValue("hidden_2.rougail.family"), '__internal_type': ParamValue("string"), '__internal_multi': ParamValue(False), '__internal_files': ParamValue(['tests/dictionaries/24_0family_hidden_condition_with_variable/dictionaries/rougail/00-base.yml']), '__internal_attribute': ParamValue("hidden"), '__internal_variable': ParamValue("2.rougail.family"), 'when': ParamValue(True), 'inverse': ParamValue(False), 'rougail.condition1': ParamOption(option_9, notraisepropertyerror=True)}), help_function=func['jinja_to_property_help'])}))
optiondescription_8 = OptionDescription(name="rougail", doc="Rougail", group_type=groups.namespace, children=[option_9, option_10, optiondescription_11], properties=frozenset({"standard"}))
optiondescription_7 = OptionDescription(name="2", doc="2", children=[optiondescription_8], properties=frozenset({"standard"}))
option_0 = OptionDescription(name="baseoption", doc="baseoption", children=[optiondescription_1, optiondescription_7])
