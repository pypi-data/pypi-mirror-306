Metadata-Version: 2.1
Name: Client_API_VN
Version: 3.0.0a0
Summary: Python API to Biolovision API and applications using it.
Home-page: https://github.com/dthonon/Client-API-VN
Author: Daniel Thonon
Author-email: d.thonon9@gmail.com
Requires-Python: >=3.10,<4.0
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Requires-Dist: SQLAlchemy (<2)
Requires-Dist: apscheduler (<4)
Requires-Dist: beautifulsoup4 (>=4.12)
Requires-Dist: docutils (>=0.21)
Requires-Dist: jinja2 (>=3.1)
Requires-Dist: jsonschema (>=4.23)
Requires-Dist: numpy (>=2.1)
Requires-Dist: psutil (>=6.1)
Requires-Dist: psycopg2-binary (>=2.9.10)
Requires-Dist: pyproj (>=3.7)
Requires-Dist: requests (>=2.32)
Requires-Dist: requests-oauthlib (>=2.0)
Requires-Dist: strictyaml (>=1.7)
Requires-Dist: tabulate (>=0.9)
Requires-Dist: toml (>=0.10)
Requires-Dist: types-beautifulsoup4 (>=4.12)
Requires-Dist: types-psutil (>=6.1)
Requires-Dist: types-psycopg2 (>=2.9)
Requires-Dist: types-pytz (>=2024.2)
Requires-Dist: types-requests (>=2.32)
Requires-Dist: types-requests-oauthlib (>=2)
Requires-Dist: types-setuptools (>=75)
Requires-Dist: types-tabulate (>=0.9)
Requires-Dist: xmltodict (>=0.14)
Requires-Dist: yappi (>=1.6)
Project-URL: Documentation, https://dthonon.github.io/Client-API-VN/
Project-URL: Repository, https://github.com/dthonon/Client-API-VN
Description-Content-Type: text/markdown

# Client_API_VN

[![Release](https://img.shields.io/github/v/release/dthonon/Client_API_VN)](https://img.shields.io/github/v/release/dthonon/Client_API_VN)
[![Build status](https://img.shields.io/github/actions/workflow/status/dthonon/Client_API_VN/main.yml?branch=main)](https://github.com/dthonon/Client_API_VN/actions/workflows/main.yml?query=branch%3Amain)
[![codecov](https://codecov.io/gh/dthonon/Client_API_VN/branch/main/graph/badge.svg)](https://codecov.io/gh/dthonon/Client_API_VN)
[![Commit activity](https://img.shields.io/github/commit-activity/m/dthonon/Client_API_VN)](https://img.shields.io/github/commit-activity/m/dthonon/Client_API_VN)
[![License](https://img.shields.io/github/license/dthonon/Client_API_VN)](https://img.shields.io/github/license/dthonon/Client_API_VN)

This is a template repository for Python projects that use Poetry for their dependency management.

- **Github repository**: <https://github.com/dthonon/Client_API_VN/>
- **Documentation** <https://dthonon.github.io/Client_API_VN/>

## Getting started with your project

First, create a repository on GitHub with the same name as this project, and then run the following commands:

```bash
git init -b main
git add .
git commit -m "init commit"
git remote add origin git@github.com:dthonon/Client_API_VN.git
git push -u origin main
```

Finally, install the environment and the pre-commit hooks with

```bash
make install
```

You are now ready to start development on your project!
The CI/CD pipeline will be triggered when you open a pull request, merge to main, or when you create a new release.

To finalize the set-up for publishing to PyPI or Artifactory, see [here](https://fpgmaas.github.io/cookiecutter-poetry/features/publishing/#set-up-for-pypi).
For activating the automatic documentation with MkDocs, see [here](https://fpgmaas.github.io/cookiecutter-poetry/features/mkdocs/#enabling-the-documentation-on-github).
To enable the code coverage reports, see [here](https://fpgmaas.github.io/cookiecutter-poetry/features/codecov/).

## Releasing a new version

- Create an API Token on [PyPI](https://pypi.org/).
- Add the API Token to your projects secrets with the name `PYPI_TOKEN` by visiting [this page](https://github.com/dthonon/Client_API_VN/settings/secrets/actions/new).
- Create a [new release](https://github.com/dthonon/Client_API_VN/releases/new) on Github.
- Create a new tag in the form `*.*.*`.
- For more details, see [here](https://fpgmaas.github.io/cookiecutter-poetry/features/cicd/#how-to-trigger-a-release).

---

Repository initiated with [fpgmaas/cookiecutter-poetry](https://github.com/fpgmaas/cookiecutter-poetry).

