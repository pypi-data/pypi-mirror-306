{".class": "MypyFile", "_fullname": "xarray.testing", "future_import_flags": [], "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "DataArray": {".class": "SymbolTableNode", "cross_ref": "xarray.core.dataarray.DataArray", "kind": "Gdef", "module_public": false}, "Dataset": {".class": "SymbolTableNode", "cross_ref": "xarray.core.dataset.Dataset", "kind": "Gdef", "module_public": false}, "Hashable": {".class": "SymbolTableNode", "cross_ref": "typing.Hashable", "kind": "Gdef", "module_public": false}, "Index": {".class": "SymbolTableNode", "cross_ref": "xarray.core.indexes.Index", "kind": "Gdef", "module_public": false}, "IndexVariable": {".class": "SymbolTableNode", "cross_ref": "xarray.core.variable.IndexVariable", "kind": "Gdef", "module_public": false}, "PandasIndex": {".class": "SymbolTableNode", "cross_ref": "xarray.core.indexes.PandasIndex", "kind": "Gdef", "module_public": false}, "PandasMultiIndex": {".class": "SymbolTableNode", "cross_ref": "xarray.core.indexes.PandasMultiIndex", "kind": "Gdef", "module_public": false}, "Set": {".class": "SymbolTableNode", "cross_ref": "typing.Set", "kind": "Gdef", "module_public": false}, "Union": {".class": "SymbolTableNode", "cross_ref": "typing.Union", "kind": "Gdef", "module_public": false}, "Variable": {".class": "SymbolTableNode", "cross_ref": "xarray.core.variable.Variable", "kind": "Gdef", "module_public": false}, "__all__": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "Var", "flags": ["has_explicit_value"], "fullname": "xarray.testing.__all__", "name": "__all__", "type": {".class": "TupleType", "implicit": false, "items": ["builtins.str", "builtins.str", "builtins.str", "builtins.str", "builtins.str", "builtins.str"], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "__annotations__": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "Var", "flags": ["is_ready"], "fullname": "xarray.testing.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "Var", "flags": ["is_ready"], "fullname": "xarray.testing.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "Var", "flags": ["is_ready"], "fullname": "xarray.testing.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "Var", "flags": ["is_ready"], "fullname": "xarray.testing.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "Var", "flags": ["is_ready"], "fullname": "xarray.testing.__package__", "name": "__package__", "type": "builtins.str"}}, "_assert_dataarray_invariants": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["da", "check_default_indexes"], "flags": [], "fullname": "xarray.testing._assert_dataarray_invariants", "name": "_assert_dataarray_invariants", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["da", "check_default_indexes"], "arg_types": ["xarray.core.dataarray.DataArray", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_assert_dataarray_invariants", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "variables": []}}}, "_assert_dataset_invariants": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["ds", "check_default_indexes"], "flags": [], "fullname": "xarray.testing._assert_dataset_invariants", "name": "_assert_dataset_invariants", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["ds", "check_default_indexes"], "arg_types": ["xarray.core.dataset.Dataset", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_assert_dataset_invariants", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "variables": []}}}, "_assert_indexes_invariants_checks": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1], "arg_names": ["indexes", "possible_coord_variables", "dims", "check_default"], "flags": [], "fullname": "xarray.testing._assert_indexes_invariants_checks", "name": "_assert_indexes_invariants_checks", "type": null}}, "_assert_internal_invariants": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["xarray_obj", "check_default_indexes"], "flags": [], "fullname": "xarray.testing._assert_internal_invariants", "name": "_assert_internal_invariants", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["xarray_obj", "check_default_indexes"], "arg_types": [{".class": "UnionType", "items": ["xarray.core.dataarray.DataArray", "xarray.core.dataset.Dataset", "xarray.core.variable.Variable"]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_assert_internal_invariants", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "variables": []}}}, "_assert_variable_invariants": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["var", "name"], "flags": [], "fullname": "xarray.testing._assert_variable_invariants", "name": "_assert_variable_invariants", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["var", "name"], "arg_types": ["xarray.core.variable.Variable", {".class": "UnionType", "items": ["typing.Hashable", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_assert_variable_invariants", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_guard": null, "variables": []}}}, "_data_allclose_or_equiv": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["arr1", "arr2", "rtol", "atol", "decode_bytes"], "flags": [], "fullname": "xarray.testing._data_allclose_or_equiv", "name": "_data_allclose_or_equiv", "type": null}}, "_decode_string_data": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["data"], "flags": [], "fullname": "xarray.testing._decode_string_data", "name": "_decode_string_data", "type": null}}, "_format_message": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0], "arg_names": ["x", "y", "err_msg", "verbose"], "flags": [], "fullname": "xarray.testing._format_message", "name": "_format_message", "type": null}}, "assert_allclose": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["a", "b", "rtol", "atol", "decode_bytes"], "flags": ["is_decorated"], "fullname": "xarray.testing.assert_allclose", "name": "assert_allclose", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_ready"], "fullname": null, "name": "assert_allclose", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}}, "assert_chunks_equal": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["a", "b"], "flags": [], "fullname": "xarray.testing.assert_chunks_equal", "name": "assert_chunks_equal", "type": null}}, "assert_duckarray_allclose": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1, 1], "arg_names": ["actual", "desired", "rtol", "atol", "err_msg", "verbose"], "flags": ["is_decorated"], "fullname": "xarray.testing.assert_duckarray_allclose", "name": "assert_duckarray_allclose", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_ready"], "fullname": null, "name": "assert_duckarray_allclose", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}}, "assert_duckarray_equal": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["x", "y", "err_msg", "verbose"], "flags": ["is_decorated"], "fullname": "xarray.testing.assert_duckarray_equal", "name": "assert_duckarray_equal", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_ready"], "fullname": null, "name": "assert_duckarray_equal", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}}, "assert_equal": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["a", "b"], "flags": ["is_decorated"], "fullname": "xarray.testing.assert_equal", "name": "assert_equal", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_ready"], "fullname": null, "name": "assert_equal", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}}, "assert_identical": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["a", "b"], "flags": ["is_decorated"], "fullname": "xarray.testing.assert_identical", "name": "assert_identical", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_ready"], "fullname": null, "name": "assert_identical", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}}, "default_indexes": {".class": "SymbolTableNode", "cross_ref": "xarray.core.indexes.default_indexes", "kind": "Gdef", "module_public": false}, "duck_array_ops": {".class": "SymbolTableNode", "cross_ref": "xarray.core.duck_array_ops", "kind": "Gdef", "module_public": false}, "ensure_warnings": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["func"], "flags": [], "fullname": "xarray.testing.ensure_warnings", "name": "ensure_warnings", "type": null}}, "formatting": {".class": "SymbolTableNode", "cross_ref": "xarray.core.formatting", "kind": "Gdef", "module_public": false}, "functools": {".class": "SymbolTableNode", "cross_ref": "functools", "kind": "Gdef", "module_public": false}, "np": {".class": "SymbolTableNode", "cross_ref": "numpy", "kind": "Gdef", "module_public": false}, "pd": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "Var", "flags": ["is_suppressed_import", "is_ready"], "fullname": "xarray.testing.pd", "name": "pd", "type": {".class": "AnyType", "missing_import_name": "xarray.testing.pd", "source_any": null, "type_of_any": 3}}}, "utils": {".class": "SymbolTableNode", "cross_ref": "xarray.core.utils", "kind": "Gdef", "module_public": false}, "warnings": {".class": "SymbolTableNode", "cross_ref": "warnings", "kind": "Gdef", "module_public": false}}, "path": "/cellar/users/dlaub/miniconda3/envs/drugcell_transfer/lib/python3.9/site-packages/xarray/testing.py"}