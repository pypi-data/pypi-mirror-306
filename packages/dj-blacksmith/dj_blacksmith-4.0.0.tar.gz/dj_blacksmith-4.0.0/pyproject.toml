[project]
name = "dj-blacksmith"
version = "4.0.0"
authors = [
    { name = "Guillaume Gauvrit", email = "guillaume@gauvr.it" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Django",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP",
]
description = "Django Bindings for Blacksmith"
requires-python = ">=3.9"
readme = "README.rst"
dependencies = [
    "django >=3.2,<=5",
    "blacksmith[prometheus] >=4.0.0,<5",
    "redis >=4.2.0,<5",
]

[project.license]
text = "MIT"

[project.urls]
Homepage = "https://github.com/mardiros/dj-blacksmith"
Documentation = "https://github.com/mardiros/dj-blacksmith/blob/main/README.rst"
Repository = "https://github.com/mardiros/dj-blacksmith.git"
Issues = "https://github.com/mardiros/dj-blacksmith/issues"
Changelog = "https://github.com/mardiros/dj-blacksmith/blob/main/CHANGELOG.rst"

[project.optional-dependencies]
docs = [
    "sphinx>=7.0.0",
    "sphinx-autodoc-typehints>=1.12.0,<2",
    "furo>=2024.8.6",
]

[tool.pdm.build]
includes = [
    "src",
    "CHANGELOG.rst",
    "CONTRIBUTORS.txt",
]
excludes = [
    "tests",
]

[tool.pytest.ini_options]
norecursedirs = "docs"

[tool.pyright]
include = [
    "src",
]
typeCheckingMode = "strict"
venvPath = ".venv"

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "B",
    "I",
    "F",
    "UP",
    "RUF",
]

[tool.coverage.report]
exclude_lines = [
    "if TYPE_CHECKING:",
    "except ImportError:",
    "except pkg_resources.DistributionNotFound:",
]

[dependency-groups]
dev = [
    "django-stubs >=1.9.0,<2",
    "pytest >=8.3.3,<9",
    "pytest-asyncio >=0.21.0,<1",
    "pytest-django >=4.5.2,<5",
    "pytest-cov >=6.0.0,<7",
    "mypy >=1.4.1,<2",
    "types-redis >=4.5.5.0,<5",
    "unasync >=0.6.0,<0.7",
]
doc = [
    "esbonio >=0.16.4,<1",
    "furo >=2024.5.6",
    "sphinx >=7.0.1",
    "sphinx-autodoc-typehints >=1.12.0",
]

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"
