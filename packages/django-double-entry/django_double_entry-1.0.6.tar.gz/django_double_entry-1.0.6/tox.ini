[tox]
envlist = 
    py{38,39,310}-django{50}
    lint
    coverage
isolated_build = True
requires = 
    tox>=4.2
    pip>=23.0

[testenv]
description = Run tests with pytest
basepython =
    py38: python3.8
    py39: python3.9
    py310: python3.10
deps =
    -r requirements/tests.txt .
    django50: Django>=5.0,<5.1
commands =
    pytest {posargs:tests} \
        --ds=tests.settings \
        --junitxml=junit-{envname}.xml \
        -n auto \
        --durations=10 \
        --cache-clear \
        --cov=accounting \
        --cov-config=.coveragerc \
        --cov-branch

[testenv:lint]
description = Run all linting checks
deps =
    flake8>=6.0
    black>=23.0
    isort>=5.12
commands =
    black --check accounting tests
    isort --check-only accounting tests
    flake8 accounting tests

[testenv:coverage]
description = Generate coverage reports
deps =
    coverage>=7.0
    pytest>=7.0
    pytest-django>=4.5
    pytest-xdist>=3.0
    pytest-cov>=4.1.0
    -r requirements/tests.txt
commands =
    coverage erase
    pytest \
        --ds=tests.settings \
        --cov=accounting \
        --cov-report=html \
        --cov-report=term-missing \
        --cov-branch \
        --cov-fail-under=85 \
        {posargs:tests}

[pytest]
DJANGO_SETTINGS_MODULE = tests.settings
norecursedirs = 
    venv 
    build 
    env 
    bin 
    .cache 
    .tox 
    coverage 
    dist 
    downloads 
    *.egg-info
addopts = 
    --ds=tests.settings 
    --junitxml='junitxml_report/report.xml' 
    -n auto 
    --durations=10 
    --cache-clear
minversion = 5.3.5
testpaths = tests
python_files = test_*.py *_test.py
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests

[coverage:run]
branch = True
source = accounting
parallel = true
relative_files = true
omit =
    */migrations/*
    */tests/*

[coverage:paths]
source =
    django-double-entry
    */site-packages/django-double-entry

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
    def __str__
show_missing = true
fail_under = 85

[flake8]
max-line-length = 99
exclude = 
    migrations
    dist
    env
    venv
    build
    .tox
    .cache
    .git
    docs/conf.py
    tests
    testapp
extend-ignore = E203, C901
max-complexity = 10

[isort]
profile = black
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
line_length = 99