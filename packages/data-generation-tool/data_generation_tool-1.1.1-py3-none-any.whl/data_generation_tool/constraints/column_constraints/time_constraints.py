from datetime import time

from data_generation_tool.constraints.column_constraints import ColumnConstraint
from data_generation_tool.types import Time
from data_generation_tool.utils import TimeIncrementUnit, TimeFormatType


class TimeConstraint(ColumnConstraint):
    """
    Base class for constraints that are related to time values
    """

    def target_column_type(self) -> type:
        return Time


class RandomTime(TimeConstraint):
    """
    Placeholder class to indicate that the times should be generated randomly
    """
    pass


class IncrementalTime(TimeConstraint):
    """
    Indicate that the times should be generated by increment following a given step and unit

    Attributes
    ----------
        unit: T
            The unit for incrementing the time
        step: int
            The step for incrementing the times
    """

    def __init__(self, unit: TimeIncrementUnit = TimeIncrementUnit.SECOND, step: int = 1):
        self.unit = unit
        self.step = step


class TimeFormat(TimeConstraint):
    """
    The format followed by the generated times

    Attributes
    ----------
        value: TimeFormatType
            How the time will be formatted
    """

    def __init__(self, value: TimeFormatType):
        self.value = value
