name: build

on: [push, pull_request]

env:
  PYTEST_ADDOPTS: "--color=yes"

permissions:
  contents: read

jobs:
  test:
    name: Test - Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install pdm
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: true
          cache-dependency-path: ./pyproject.toml
          version: "2.20.0"

      - name: Install dependencies
        run: |
          pdm install

      - name: Run tests
        run: pdm run invoke tests

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Validate links in Markdown files
        uses: JustinBeckwith/linkinator-action@v1
        with:
          retry: true

      - name: Install pdm
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: "3.10"
          version: "2.20.0"

      - name: Install dependencies
        run: |
          pdm install

      - name: Run linters
        run: pdm run invoke lint --diff

  deploy:
    name: Deploy
    environment: Deployment
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: github.ref=='refs/heads/main' && github.event_name!='pull_request'

    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Check release
        id: check_release
        run: |
          uvx --with 'autopub[github]' autopub check

      - name: Publish
        if: ${{ steps.check_release.outputs.autopub_release=='true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          uvx --with 'autopub[github]' autopub prepare
          uvx --with 'autopub[github]' autopub commit
          uvx --with 'autopub[github]' autopub build
          uvx --with 'autopub[github]' autopub githubrelease

      - name: Upload package to PyPI
        if: ${{ steps.check_release.outputs.autopub_release=='true' }}
        uses: pypa/gh-action-pypi-publish@release/v1
