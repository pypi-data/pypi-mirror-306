[project]
name = "xlens"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "einops>=0.8.0",
    "equinox>=0.11.8",
    "jax>=0.4.35",
    "optax>=0.2.3",
    "protobuf>=5.28.3",
    "safetensors>=0.4.5",
    "sentencepiece>=0.2.0",
    "transformers>=4.46.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "mypy>=1.13.0",
    "pre-commit>=4.0.1",
    "ruff>=0.7.1",
]
test = [
    "pytest>=8.3.3",
]
torch = [
    "torch>=2.5.1",
    "transformer-lens>=2.8.1",
]
cuda12 = [
    "jax[cuda12]>=0.4.35",
]
flax = [
    "flax>=0.10.1",
]

[tool.uv.workspace]
members = ["xlens"]


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "TransformerLens",
    "ui"
]

line-length = 120
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.mypy]
check_untyped_defs=true
exclude=[".venv/"]
ignore_missing_imports=true
allow_redefinition=true
implicit_optional=true

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "I"]
ignore = ["E741", "F722"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"


