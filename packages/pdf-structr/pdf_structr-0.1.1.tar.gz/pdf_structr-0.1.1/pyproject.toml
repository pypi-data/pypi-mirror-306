[tool.poetry]
name = "pdf-structr"
version = "0.1.1"
description = "Tool to extract the structure of a PDF"
authors = ["Cedric Lor <cedric.lor@gmail.com>"]
readme = "README.md"
license = "Proprietary"


[tool.poetry.dependencies]
python = "^3.11"
pymupdf = "^1.24.13"
numpy = "^1"


[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
flake8 = "^7.1.1"
ruff = "^0.7.2"
pre-commit = "^4.0.1"


[tool.poetry.group.test.dependencies]
pytest = "^8.3.3"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
addopts = "--strict-markers"
markers = [
    "exclude_from_github_actions: marks the tests that should be excluded from github actions",
    "heavy: marks tests as heavy (to run) (deselect with '-m \"not heavy\"')",
    "local: marks the tests using the local environment (deselect with '-m \"not local\"')",
    "paths: marks tests as using path environment variable (deselect with '-m \"not paths\"')",
    "path_dependant: marks tests as using path environment variable",
]
pythonpath = "pdf_structr"
testpaths = "tests"


[tool.black]
skip-string-normalization = true
line-length = 79


[tool.ruff]
# Same as Black.
line-length = 79

exclude = ["jupyter_notebook_config.py"]
select = [
    "E",  # pycodestyle errors (settings from FastAPI, thanks, @tiangolo!)
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # too complex
]


[tool.ruff.isort]
order-by-type = true
relative-imports-order = "closest-to-furthest"
extra-standard-library = ["typing"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
known-first-party = []
