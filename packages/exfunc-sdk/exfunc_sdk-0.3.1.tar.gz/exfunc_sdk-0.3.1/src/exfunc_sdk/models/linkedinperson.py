"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from exfunc_sdk.types import BaseModel
from typing import List, Optional
from typing_extensions import NotRequired, TypedDict


class ExperiencesTypedDict(TypedDict):
    title: NotRequired[str]
    company_name: NotRequired[str]
    start_date: NotRequired[str]
    end_date: NotRequired[str]


class Experiences(BaseModel):
    title: Optional[str] = None

    company_name: Optional[str] = None

    start_date: Optional[str] = None

    end_date: Optional[str] = None


class LinkedInPersonTypedDict(TypedDict):
    url: NotRequired[str]
    r"""URL to the person's profile"""
    name: NotRequired[str]
    r"""Full name of the person"""
    location: NotRequired[str]
    r"""Location of the person"""
    title: NotRequired[str]
    r"""Job title of the person"""
    company_name: NotRequired[str]
    r"""Name of the company the person works for"""
    company_url: NotRequired[str]
    r"""URL to the company profile"""
    experiences: NotRequired[List[ExperiencesTypedDict]]
    r"""List of experiences or previous job roles of the person"""


class LinkedInPerson(BaseModel):
    url: Optional[str] = None
    r"""URL to the person's profile"""

    name: Optional[str] = None
    r"""Full name of the person"""

    location: Optional[str] = None
    r"""Location of the person"""

    title: Optional[str] = None
    r"""Job title of the person"""

    company_name: Optional[str] = None
    r"""Name of the company the person works for"""

    company_url: Optional[str] = None
    r"""URL to the company profile"""

    experiences: Optional[List[Experiences]] = None
    r"""List of experiences or previous job roles of the person"""
