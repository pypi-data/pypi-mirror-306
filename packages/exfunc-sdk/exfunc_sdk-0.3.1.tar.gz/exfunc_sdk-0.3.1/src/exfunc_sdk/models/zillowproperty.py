"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from exfunc_sdk.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AddressTypedDict(TypedDict):
    r"""The physical address of the property"""

    street_address: NotRequired[str]
    r"""The street address of the building"""
    zipcode: NotRequired[str]
    r"""The zipcode of the building"""
    city: NotRequired[str]
    r"""The city of the building"""
    state: NotRequired[str]
    r"""The state of the building"""
    building_id: NotRequired[int]
    r"""The ID of the building"""


class Address(BaseModel):
    r"""The physical address of the property"""

    street_address: Annotated[Optional[str], pydantic.Field(alias="streetAddress")] = (
        None
    )
    r"""The street address of the building"""

    zipcode: Optional[str] = None
    r"""The zipcode of the building"""

    city: Optional[str] = None
    r"""The city of the building"""

    state: Optional[str] = None
    r"""The state of the building"""

    building_id: Annotated[Optional[int], pydantic.Field(alias="buildingId")] = None
    r"""The ID of the building"""


class ZillowPropertyTypedDict(TypedDict):
    property_id: NotRequired[int]
    r"""Unique identifier for the property"""
    address: NotRequired[AddressTypedDict]
    r"""The physical address of the property"""
    photos: NotRequired[List[str]]
    r"""List of photo URLs for the property"""
    bathrooms: NotRequired[float]
    r"""Number of bathrooms in the property"""
    bedrooms: NotRequired[int]
    r"""Number of bedrooms in the property"""
    living_area: NotRequired[float]
    r"""The living area of the property in square feet"""
    year_built: NotRequired[int]
    r"""The year the property was built"""
    property_type: NotRequired[str]
    r"""Type of the property (e.g. house, condo)"""
    listing_status: NotRequired[str]
    r"""Status of the listing (e.g. forSale, sold)"""
    days_on_zillow: NotRequired[int]
    r"""Number of days the property has been listed on Zillow"""
    price: NotRequired[float]
    r"""Listing price of the property"""
    zestimate: NotRequired[float]
    r"""Zillow's estimated value of the property"""
    rent_zestimate: NotRequired[float]
    r"""Zillow's estimated value of the rent for the property"""


class ZillowProperty(BaseModel):
    property_id: Optional[int] = None
    r"""Unique identifier for the property"""

    address: Optional[Address] = None
    r"""The physical address of the property"""

    photos: Optional[List[str]] = None
    r"""List of photo URLs for the property"""

    bathrooms: Optional[float] = None
    r"""Number of bathrooms in the property"""

    bedrooms: Optional[int] = None
    r"""Number of bedrooms in the property"""

    living_area: Optional[float] = None
    r"""The living area of the property in square feet"""

    year_built: Optional[int] = None
    r"""The year the property was built"""

    property_type: Optional[str] = None
    r"""Type of the property (e.g. house, condo)"""

    listing_status: Optional[str] = None
    r"""Status of the listing (e.g. forSale, sold)"""

    days_on_zillow: Optional[int] = None
    r"""Number of days the property has been listed on Zillow"""

    price: Optional[float] = None
    r"""Listing price of the property"""

    zestimate: Optional[float] = None
    r"""Zillow's estimated value of the property"""

    rent_zestimate: Optional[float] = None
    r"""Zillow's estimated value of the rent for the property"""
