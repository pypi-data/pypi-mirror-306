# Generated by Django 3.0.5 on 2022-08-15 11:58

from django.db import migrations

from django_rds_iam_auth.models import Group
from django.contrib.auth.models import Permission
from django.contrib.contenttypes.models import ContentType


def create_events_permissions(apps, schema_editor):
    content_type = ContentType.objects.get(model='permission')
    audience_rw, _ = Permission.objects.get_or_create(
        name='Events management',
        codename='event-audience-Read&Write',
        content_type=content_type
    )
    event_template_r, _ = Permission.objects.get_or_create(
        name='Events management',
        codename='event-templates-Read',
        content_type=content_type
    )
    event_template_rw, _ = Permission.objects.get_or_create(
        name='Events management',
        codename='event-templates-Read&Write',
        content_type=content_type
    )
    event_instance_rw, _ = Permission.objects.get_or_create(
        name='Events management',
        codename='event-instances-Read&Write',
        content_type=content_type
    )
    tenant_groups = Group.objects.filter(name_alias='TenantAdmin')
    organization_groups = Group.objects.filter(name_alias='OrganizationAdmin')
    for group in tenant_groups:
        group.permissions.add(audience_rw, event_template_rw, event_instance_rw)
    for group in organization_groups:
        group.permissions.add(audience_rw, event_template_r, event_instance_rw)


class Migration(migrations.Migration):
    dependencies = [
        ('django_rds_iam_auth', '0058_api_user_rls'),
    ]

    operations = [
        migrations.RunPython(create_events_permissions),
        migrations.RunSQL(
            sql="""UPDATE auth_permission SET is_default = false WHERE name = 'Events management';""",
            reverse_sql="UPDATE auth_permission SET is_default = true WHERE name = 'Events management';"
        ),
    ]
