name: tests

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9, "3.10", "3.11", "3.12"]
        subset: ["data_tests", "inference_tests", "test_aux", "test_text", "test_tts", "test_tts2", "test_vocoder", "test_xtts", "test_zoo0", "test_zoo1", "test_zoo2"]
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.4.27"
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}
      - name: Install Espeak
        if: contains(fromJSON('["inference_tests", "test_text", "test_tts", "test_tts2", "test_xtts", "test_zoo0", "test_zoo1", "test_zoo2"]'), matrix.subset)
        run: |
          sudo apt-get update
          sudo apt-get install espeak espeak-ng
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends git make gcc
          make system-deps
      - name: Replace scarf urls
        if: contains(fromJSON('["data_tests", "inference_tests", "test_aux", "test_tts", "test_tts2", "test_xtts", "test_zoo0", "test_zoo1", "test_zoo2"]'), matrix.subset)
        run: |
          sed -i 's/https:\/\/coqui.gateway.scarf.sh\//https:\/\/github.com\/coqui-ai\/TTS\/releases\/download\//g' TTS/.models.json
      - name: Unit tests
        run: |
          resolution=highest
          if [ "${{ matrix.python-version }}" == "3.9" ]; then
            resolution=lowest-direct
          fi
          uv run --resolution=$resolution --extra server --extra languages make ${{ matrix.subset }}
      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: coverage-data-${{ matrix.subset }}-${{ matrix.python-version }}
          path: .coverage.*
          if-no-files-found: ignore
  coverage:
    if: always()
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.4.27"
      - uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true
      - name: Combine coverage
        run: |
          uv python install
          uvx coverage combine
          uvx coverage html --skip-covered --skip-empty
          uvx coverage report --format=markdown >> $GITHUB_STEP_SUMMARY
