[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "django-actual-admin-docs"
version = "0.5"
packages = [{include = "actual_admin_docs"}]
description = "Render Markdown documentation in the Django Admin."
authors = ["Martin Mahner <martin@mahner.org>"]
license = "MIT"
readme = ["README.md", "CHANGELOG.md"]
homepage = "https://github.com/bartTC/django-actual-admin-docs"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Framework :: Django",
]

[tool.poetry.dependencies]
python = "^3.9"
django = {version = "*", allow-prereleases = true}
markdown-it-py = {extras = ["linkify", "plugins"], version = "^3.0.0"}

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-django = "^4.9.0"
pytest-socket = "^0.7.0"
pytest-cov = "^6.0.0"

[tool.mypy]
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
strict_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
exclude = ".*/migrations/.*"

[tool.ruff]
target-version = "py313"
exclude = ["migrations"]
lint.select = ["ALL"]
lint.ignore = [
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`
    "ARG001", # Unused function argument (request, ...)
    "ARG002", # Unused method argument (*args, **kwargs)
    "D",      # Missing or badly formatted docstrings
    "ERA001", # Found commented out code
    "FBT",    # Flake Boolean Trap (don't use arg=True in functions)

    # Intentionally disabled
    "RUF012", # Mutable class attributes https://github.com/astral-sh/ruff/issues/5243
    "COM812", # Checks for the absence of trailing commas
    "ISC001", # Checks for implicitly concatenated strings on a single line
]

[tool.ruff.lint.per-file-ignores]
"actual_admin_docs/tests/*.py" = [
    "S101",   # Use of `assert` detected
]


[tool.pytest.ini_options]
testpaths = ["actual_admin_docs"]
python_files = ["*.py"]
addopts = """
    --ds=actual_admin_docs.tests.testproject.settings
    --disable-socket
    --allow-hosts=127.0.0.1,localhost
    --reuse-db
    --cov
    --cov-report=html:.htmlcov
"""


[tool.coverage.run]
omit = ["test*.py", "noxfile.py"]

[tool.coverage.report]
exclude_lines = [
    "# pragma: nocover",
    "if TYPE_CHECKING:"
]
