"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

from abc import (
    ABCMeta,
    abstractmethod,
)
from chalk._gen.chalk.server.v1.builder_pb2 import (
    ActivateDeploymentRequest,
    ActivateDeploymentResponse,
    DeployKubeComponentsRequest,
    DeployKubeComponentsResponse,
    IndexDeploymentRequest,
    IndexDeploymentResponse,
    RebuildDeploymentRequest,
    RebuildDeploymentResponse,
    RedeployDeploymentRequest,
    RedeployDeploymentResponse,
    UploadSourceRequest,
    UploadSourceResponse,
)
from grpc import (
    Channel,
    Server,
    ServicerContext,
    UnaryUnaryMultiCallable,
)

class BuilderServiceStub:
    def __init__(self, channel: Channel) -> None: ...
    ActivateDeployment: UnaryUnaryMultiCallable[
        ActivateDeploymentRequest,
        ActivateDeploymentResponse,
    ]
    """Takes an existing (past) deployment and promotes the k8s resources / other things associated with it.
    Useful for debugging in local development where the auto activation doesn't work b/c no pubsub.
    """
    IndexDeployment: UnaryUnaryMultiCallable[
        IndexDeploymentRequest,
        IndexDeploymentResponse,
    ]
    DeployKubeComponents: UnaryUnaryMultiCallable[
        DeployKubeComponentsRequest,
        DeployKubeComponentsResponse,
    ]
    """Intermediate step in the deployment activation process. Allows for partial migration to the new
    go-api-server builder service.
    """
    RebuildDeployment: UnaryUnaryMultiCallable[
        RebuildDeploymentRequest,
        RebuildDeploymentResponse,
    ]
    """Takes an existing (past) deployment and re-creates the image associated with it,
    publishing the image as 'new_image_tag'.
    """
    RedeployDeployment: UnaryUnaryMultiCallable[
        RedeployDeploymentRequest,
        RedeployDeploymentResponse,
    ]
    """Triggers a new build with the source code from this deployment and deploys the result"""
    UploadSource: UnaryUnaryMultiCallable[
        UploadSourceRequest,
        UploadSourceResponse,
    ]
    """Triggers a new build with the provided source code archive and deploys the result"""

class BuilderServiceServicer(metaclass=ABCMeta):
    @abstractmethod
    def ActivateDeployment(
        self,
        request: ActivateDeploymentRequest,
        context: ServicerContext,
    ) -> ActivateDeploymentResponse:
        """Takes an existing (past) deployment and promotes the k8s resources / other things associated with it.
        Useful for debugging in local development where the auto activation doesn't work b/c no pubsub.
        """
    @abstractmethod
    def IndexDeployment(
        self,
        request: IndexDeploymentRequest,
        context: ServicerContext,
    ) -> IndexDeploymentResponse: ...
    @abstractmethod
    def DeployKubeComponents(
        self,
        request: DeployKubeComponentsRequest,
        context: ServicerContext,
    ) -> DeployKubeComponentsResponse:
        """Intermediate step in the deployment activation process. Allows for partial migration to the new
        go-api-server builder service.
        """
    @abstractmethod
    def RebuildDeployment(
        self,
        request: RebuildDeploymentRequest,
        context: ServicerContext,
    ) -> RebuildDeploymentResponse:
        """Takes an existing (past) deployment and re-creates the image associated with it,
        publishing the image as 'new_image_tag'.
        """
    @abstractmethod
    def RedeployDeployment(
        self,
        request: RedeployDeploymentRequest,
        context: ServicerContext,
    ) -> RedeployDeploymentResponse:
        """Triggers a new build with the source code from this deployment and deploys the result"""
    @abstractmethod
    def UploadSource(
        self,
        request: UploadSourceRequest,
        context: ServicerContext,
    ) -> UploadSourceResponse:
        """Triggers a new build with the provided source code archive and deploys the result"""

def add_BuilderServiceServicer_to_server(servicer: BuilderServiceServicer, server: Server) -> None: ...
