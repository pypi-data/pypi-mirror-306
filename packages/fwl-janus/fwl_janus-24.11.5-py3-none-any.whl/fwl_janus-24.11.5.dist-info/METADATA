Metadata-Version: 2.1
Name: fwl-janus
Version: 24.11.5
Summary: Temperature structure generator for planetory atmospheres.
Author-email: Tim Lichtenberg <tim.lichtenberg@rug.nl>, Mark Hammond <mark.hammond@physics.ox.ac.uk>, Ryan Boukrouche <ryan.boukrouche@astro.su.se>, RJ Graham <arejaygraham@uchicago.edu>, Harrison Nicholls <harrison.nicholls@physics.ox.ac.uk>, Hamish Innes <hamish.innes@physics.ox.ac.uk>, Laurent Soucasse <l.soucasse@esciencecenter.nl>
License: Apache 2.0 License
Project-URL: homepage, https://github.com/FormingWorlds/JANUS
Keywords: exoplanet,atmosphere
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE.md
Requires-Dist: click
Requires-Dist: matplotlib
Requires-Dist: natsort
Requires-Dist: netcdf4
Requires-Dist: numpy
Requires-Dist: osfclient
Requires-Dist: pandas
Requires-Dist: platformdirs
Requires-Dist: requests
Requires-Dist: scipy
Requires-Dist: seaborn
Requires-Dist: toml
Requires-Dist: tomlkit
Requires-Dist: f90nml
Provides-Extra: develop
Requires-Dist: bump-my-version; extra == "develop"
Requires-Dist: coverage[toml]; extra == "develop"
Requires-Dist: fwl-mors; extra == "develop"
Requires-Dist: pytest; extra == "develop"
Provides-Extra: docs
Requires-Dist: markdown-include; extra == "docs"
Requires-Dist: mkdocs; extra == "docs"
Requires-Dist: mkdocs-material; extra == "docs"
Requires-Dist: mkdocstrings[python]; extra == "docs"
Provides-Extra: publishing
Requires-Dist: twine; extra == "publishing"
Requires-Dist: wheel; extra == "publishing"
Requires-Dist: build; extra == "publishing"

[![Documentation Status](https://readthedocs.org/projects/fwl-janus/badge/?version=latest)](https://fwl-janus.readthedocs.io/en/latest/?badge=latest)
![Coverage](https://gist.githubusercontent.com/stefsmeets/99391a66bb9229771504c3a4db611d05/raw/covbadge.svg)

## JANUS (1D convective atmosphere model)

Generates a temperature profile using the generalised moist pseudoadiabat and a prescribed stratosphere. Calculates radiative fluxes using SOCRATES.

Pronounced *jan-us*. *Jan* as in "january", and *us* as in the collective pronoun.

### Documentation
https://fwl-proteus.readthedocs.io

## Contributors

| Name  | Email address |
| -     | -             |
Tim Lichtenberg         | tim.lichtenberg[at]rug.nl |
Harrison Nicholls       | harrison.nicholls[at]physics.ox.ac.uk |
Laurent Soucasse        | l.soucasse[at]esciencecenter.nl |
Stef Smeets             | s.smeets[at]esciencecenter.nl |
Mark Hammond            | mark.hammond[at]physics.ox.ac.uk |
RJ Graham               | arejaygraham[at]uchicago.edu |
Raymond Pierrehumbert   | raymond.pierrehumbert[at]physics.ox.ac.uk |
Ryan Boukrouche         | ryan.boukrouche[at]astro.su.se |
Hamish Innes            | hamish.innes[at]fu-berlin.de |


### Repository structure
* `README.md`           - This file
* `src/janus/data/`     - Janus data files
* `src/janus/modules/`  - Utility python scripts
* `src/janus/utils/`    - Utility python scripts
* `examples/`           - Typical use scripts
* `tools/`              - Useful tools

### Developer installation instructions
1. Download and install Socrates
```console
git clone git@github.com:nichollsh/SOCRATES.git
cd SOCRATES
./configure
./build-code
source set_rad_env
cd ..
```
2. Download and install Janus
```console
git clone git@github.com:FormingWorlds/JANUS.git
cd JANUS
pip install -e .
```
3. Download data from the [OSF repository](https://osf.io/vehxg/)
    * Set the environment variable FWL_DATA to define where the spectral data files will be stored
        * `export FWL_DATA=...`
    * Run the following commands to download all basic data
        * `janus download spectral`
        * `janus download stellar`
    * Alternatively, you can specify which spectral data you want to download, and optionally the number of bands
        * `janus download spectral -n Frostflow -b 4096`

### Run instructions
In the examples folder you can find python scripts showing typical usecases/workflows of atmosphere modelling with Janus.
