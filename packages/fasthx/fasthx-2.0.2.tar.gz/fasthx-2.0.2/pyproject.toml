[tool.poetry]
name = "fasthx"
version = "2.0.2"
description = "FastAPI data APIs with HTMX support."
authors = ["Peter Volf <do.volfp@gmail.com>"]
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = ">=0.100.0"
typing-extensions = ">=4.5.0"

[tool.poetry.group.dev.dependencies]
httpx = "^0.26.0"
jinja2 = "^3.1.4"
mkdocs-material = "^9.5.32"
mkdocstrings = {extras = ["python"], version = "^0.25.2"}
mypy = "^1.11.1"
poethepoet = "^0.27.0"
pytest = "^8.3.2"
pytest-random-order = "^1.1.1"
ruff = "^0.6.2"
uvicorn = "^0.30.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
strict = true
show_error_codes = true

[tool.ruff]
line-length = 108
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    "dist",
    "docs",
]
lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "S",  # flake8-bandit - we must ignore these rules in tests
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101"]  # S101: use of assert detected

[tool.poe.tasks]
check-format = "ruff format --check ."
format = "ruff format ."
lint = "ruff check ."
lint-fix = "ruff . --fix"
mypy = "mypy ."
test = "python -m pytest tests --random-order"
static-checks.sequence = ["lint", "check-format", "mypy"]
static-checks.ignore_fail = "return_non_zero"
serve-docs = "mkdocs serve"
