[build-system]
requires = [
    "setuptools>=61",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "red-wine-mm"
description = "A red wine classification model"
readme = "README.md"
version = "0.0.3"
authors = [{name = "Matthew Choi", email = "matt.choi531@gmail.com"}]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent"
]

dependencies = [
    "numpy",
    "scikit-learn",
    "typing",
    "pandas",
    "pydantic",
    "strictyaml",
    "pathlib"
]   

requires-python = ">=3.10"

[project.optional-dependencies]
dev = [
    "pytest",
    "tox",
    "flake8",
    "black",
    "isort"
]
viz = [
    "matplotlib",
    "seaborn"
]

[tool.mypy]
warn_unreachable = false
warn_unused_ignores = true
follow_imports = "skip"
show_error_context = true
warn_incomplete_stub = true
ignore_missing_imports = true
check_untyped_defs = true
cache_dir = "/dev/null"
# Allow defining functions without any types.
disallow_untyped_defs = false
warn_redundant_casts = true
warn_unused_configs = true
strict_optional = true

[tool.pytest.ini_options]
minversion = "2.0"
addopts = "-rfEX -p pytester --strict-markers"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test", "Acceptance"]
python_functions = ["test"]
# NOTE: "doc" is not included here, but gets tested explicitly via "doctesting".
testpaths = ["tests"]
xfail_strict = true
filterwarnings = [
    "error",
    "default:Using or importing the ABCs:DeprecationWarning:unittest2.*",
    # produced by older pyparsing<=2.2.0.
    "default:Using or importing the ABCs:DeprecationWarning:pyparsing.*",
    "default:the imp module is deprecated in favour of importlib:DeprecationWarning:nose.*",
    # distutils is deprecated in 3.10, scheduled for removal in 3.12
    "ignore:The distutils package is deprecated:DeprecationWarning",
    # produced by python3.6/site.py itself (3.6.7 on Travis, could not trigger it with 3.6.8)."
    "ignore:.*U.*mode is deprecated:DeprecationWarning:(?!(pytest|_pytest))",
    # produced by pytest-xdist
    "ignore:.*type argument to addoption.*:DeprecationWarning",
    # produced on execnet (pytest-xdist)
    "ignore:.*inspect.getargspec.*deprecated, use inspect.signature.*:DeprecationWarning",
    # pytest's own futurewarnings
    "ignore::pytest.PytestExperimentalApiWarning",
    # Do not cause SyntaxError for invalid escape sequences in py37.
    # Those are caught/handled by pyupgrade, and not easy to filter with the
    # module being the filename (with .py removed).
    "default:invalid escape sequence:DeprecationWarning",
    # ignore use of unregistered marks, because we use many to test the implementation
    "ignore::_pytest.warning_types.PytestUnknownMarkWarning",
]

[tool.black]
target-version = ['py311']
exclude = '''
/(
    \.git
| \.hg
| \.mypy_cache
| \.tox
| \.venv
| _build
| buck-out
| build
| dist
| data
)/
'''

[tool.isort]
profile = "black"
line_length = 100
lines_between_sections = 1
skip = [".tox", "dist", "__pycache__"]

[tool.flake8]
max-line-length = 100
exclude = [
    # No need to traverse our git directory
    ".git",
    # There's no value in checking cache directories
    "__pycache__",
    ".tox",
    "dist",
]
# Use extend-ignore to add to already ignored checks which are anti-patterns like W503.
extend-ignore = [
    # PEP 8 recommends to treat : in slices as a binary operator with the lowest priority, and to leave an equal
    # amount of space on either side, except if a parameter is omitted (e.g. ham[1 + 1 :]).
    # This behaviour may raise E203 whitespace before ':' warnings in style guide enforcement tools like Flake8.
    # Since E203 is not PEP 8 compliant, we tell Flake8 to ignore this warning.
    # https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#slices    
    "E203"
]