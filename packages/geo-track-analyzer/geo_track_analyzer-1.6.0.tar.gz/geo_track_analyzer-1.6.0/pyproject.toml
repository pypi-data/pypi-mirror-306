[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "geo-track-analyzer"
description = "Analyze geospacial data tracks"
authors = [
  { name = "Korbinian Schweiger", email = "korbinian.schweiger@gmail.com" },
]
readme = "README.md"
license = { file = "LICENSE" }
dynamic = ["version"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Topic :: Scientific/Engineering :: GIS",
  "Topic :: Scientific/Engineering :: Visualization",
  "Topic :: Software Development :: Libraries",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
]
keywords = ["fit", "gpx", "visualization", "analysis"]
requires-python = ">=3.10"
dependencies = [
  "numpy>=1,<2",
  "gpxpy~=1.6",
  "requests>=2,<3",
  "plotly>=5,<6",
  "pandas>=2,<3",
  "fitparse~=1.2",
  "pydantic>=2,<3",
  "pydantic-numpy>=5,<6",
]

[project.urls]
Home = "https://github.com/kschweiger/track_analyzer"
Documentation = "https://kschweiger.github.io/track_analyzer/"
Source = "https://github.com/kschweiger/track_analyzer"

[project.scripts]
extract-fit-track = 'geo_track_analyzer:extract_track'
enhance-elevation = 'geo_track_analyzer:update_elevation'

[project.optional-dependencies]
cli = ["click>=8,<9", "rich"]

[tool.pytest.ini_options]
testpaths = ["tests/"]

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "I", "PD", "PT", "NPY", "N", "W", "RET", "ANN", "RUF"]
unfixable = ["F841", "RUF005", "RUF015"]
ignore = [
  "ANN101",
  "RUF009",
  "E731",
  "RET505",
  "ANN002",
  "ANN003",
  "RUF005",
  "ANN102",
]
ignore-init-module-imports = true

[tool.mypy]
strict_optional = true
check_untyped_defs = true
exclude = "tests"

[[tool.mypy.overrides]]
module = "fitparse.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "plotly.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "coloredlogs.*"
ignore_missing_imports = true

[tool.git-changelog]
output = "CHANGELOG.md"
convention = "conventional"
template = "angular"

[tool.setuptools_scm]
[tool.setuptools.packages]
find = {}
