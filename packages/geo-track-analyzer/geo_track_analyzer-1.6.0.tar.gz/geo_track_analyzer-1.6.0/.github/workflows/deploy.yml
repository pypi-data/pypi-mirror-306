name: Deploy package and documentation

on:
  push:
    tags:
      - "*"

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          pip install -r requirements/prod.txt
          pip install -r requirements/dev.txt
          pip install -r requirements/doc.txt
          pip install -e .
      - name: Build the package
        run: |
          pip list
          python -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@master
        with:
          name: build-artifacts
          path: dist/
  publish-test-index:
    name: Publish Python 🐍 distribution 📦 to Test-PyPI
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Setup twine
        run: |
          pip install --upgrade twine
      - name: Download all the dists
        uses: actions/download-artifact@master
        with:
          name: build-artifacts
          path: dist/
      - name: Publish dist
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_KEY }}
        run: |
          ls -l
          ls -l dist/
          twine upload -r testpypi dist/*
  install-test-package:
    name: Install 📦 from Test-PyPI
    runs-on: ubuntu-latest
    needs: publish-test-index
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install package and run cli
        run: |
          pip install --no-cache-dir --extra-index-url https://pypi.org/simple/ -i https://test.pypi.org/simple/ geo-track-analyzer[cli]
          enhance-elevation --help
  publish-index:
    name: Publish Python 🐍 distribution 📦 to PyPI
    runs-on: ubuntu-latest
    needs: [install-test-package, publish-github]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Setup twine
        run: |
          pip install --upgrade twine
      - name: Download all the dists
        uses: actions/download-artifact@master
        with:
          name: build-artifacts
          path: dist/
      - name: Publish dist
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_KEY }}
        run: |
          ls -l
          ls -l dist/
          twine upload dist/*
  publish-github:
    name: GitHub release 🦾
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Setup Python
        uses: actions/setup-python@master
      - name: Install git-changelog
        run: pip install git-changelog
      - name: Prepare release notes
        run: git-changelog --release-notes > release-notes.md
      - name: Download all the dists
        uses: actions/download-artifact@master
        with:
          name: build-artifacts
          path: dist/
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: release-notes.md
          files: dist/*
  deploy-doc:
    name: Build and deploy documentation 📚
    runs-on: ubuntu-latest
    needs: publish-github
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          pip install -r requirements/prod.txt
          pip install -r requirements/dev.txt
          pip install -r requirements/doc.txt
          pip install -e .
      - name: Build the documentation
        run: |
          pip list
          python docs/dump_github_releases.py
          python docs/generate_visualization_examples.py
          mkdocs build
      - uses: actions/upload-artifact@master
        with:
          name: DocumentationHTML
          path: site/
      - name: Commit documentation changes
        run: |
          git clone https://github.com/kschweiger/track_analyzer.git --branch gh-pages --single-branch gh-pages
          cp -r site/* gh-pages/
          cd gh-pages
          touch .nojekyll
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Update documentation" -a || true
          # The above command will fail if no changes were present, so we ignore
          # that.
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: gh-pages
          directory: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
