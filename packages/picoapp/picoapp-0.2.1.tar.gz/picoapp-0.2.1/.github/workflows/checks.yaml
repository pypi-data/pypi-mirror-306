# https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow
# https://docs.github.com/en/actions/guides/building-and-testing-python

name: checks

on:
  push:
    branches:
    - main
  pull_request:
  schedule:
    - cron: '0 0 * * 0' # at 00:00 every Sunday

jobs:

  checks:

    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Rust: Install toolchain"
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: "Install prerequisites"
        run: |
          dpkq-query -l libasound2-dev || true
          dpkq-query -l libdbus-1-dev || true
          sudo apt-get update
          sudo apt install libasound2-dev libdbus-1-dev
          dpkq-query -l libasound2-dev || true
          dpkq-query -l libdbus-1-dev || true

      - name: "Rust: Tests"
        run: |
          cargo test

      - name: "Install uv"
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: "Python: Install dependencies"
        run: |
          . env.sh
          ./scripts/venv_create
          . env.sh
          uv pip install -r requirements_dev.in -r requirements.in
          uv pip freeze

      - name: "Install native package"
        run: |
          . env.sh
          maturin develop --uv

      - name: "Python: Check types"
        run: |
          . env.sh
          mypy .

      - name: "Python: Check linter"
        run: |
          . env.sh
          flake8

      - name: "Python: Check format"
        run: |
          . env.sh
          black --check .
          isort --check .

      - name: "Python: Tests"
        run: |
          . env.sh
          pytest

