{"version":3,"file":"lib_widget_js.227c88f975160176e66d.js","mappings":"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","sources":["webpack://@naoh16/ipyaudioworklet/./src/audio.ts","webpack://@naoh16/ipyaudioworklet/./src/version.ts","webpack://@naoh16/ipyaudioworklet/./src/widget.ts"],"sourcesContent":["class DataViewEx extends DataView {\r\n  setFourCC(offset: number, cc: string) {\r\n    for (let i = 0; i < 4; i++) {\r\n      this.setUint8(offset + i, cc.charCodeAt(i));\r\n    }\r\n  }\r\n}\r\n\r\nfunction encodeAudioAsWavfile(audiodata: any[], settings: MediaTrackSettings) {\r\n  // console.assert(settings.sampleSize == 16, \"sampleSize (Bit-per-sample) should be 16.\", settings);\r\n  if (settings.sampleSize !== 16) {\r\n    console.log(\r\n      'Warning: SampleSize is not 16 [bit].\\n',\r\n      'The sound is forcely quantized as int16 (signed short) sound.',\r\n      settings\r\n    );\r\n  }\r\n  //console.assert(settings.channelCount == 1, \"#Channel should be one (monoral).\", settings);\r\n  // @ts-ignore: TS2339\r\n  if (settings.channelCount !== 1) {\r\n    console.log(\r\n      'Warning: #Channel is not 1 (monoral).\\n',\r\n      'The sound is forcely converted to monaural sound by \"(L+R)/2\" method.',\r\n      settings\r\n    );\r\n  }\r\n\r\n  // see WAVEFORMAT_EX\r\n  // https://learn.microsoft.com/ja-jp/windows/win32/api/mmeapi/ns-mmeapi-waveformatex\r\n  const _nSamplesPerSec = settings.sampleRate || 48000; // ex. 48000 [Hz]\r\n  const _nChannels = 1; // settings.channelCount;   // ex. 1 [ch]\r\n  const _wBitsPerSample = 16; // settings.sampleSize || 16;     // ex. 16 [bit]\r\n  const _nBlockAlign = (_nChannels * _wBitsPerSample) / 8; // ex. 2 [byte]\r\n  const _nAvgBytesPerSec = _nBlockAlign * _nSamplesPerSec; // ex. 96000 [byte/sec]\r\n\r\n  const dataLengthSample = buffers.reduce((a, v) => a + v.length, 0);\r\n  const dataLengthByte = dataLengthSample * _nBlockAlign;\r\n\r\n  const arrayBuffer = new ArrayBuffer(44 + dataLengthByte);\r\n  const dv = new DataViewEx(arrayBuffer);\r\n  let offset = 0;\r\n\r\n  // RIFF Header\r\n  dv.setFourCC(offset, 'RIFF');\r\n  offset += 4;\r\n  dv.setUint32(offset, dataLengthByte + 36, true);\r\n  offset += 4; // filesize - 8\r\n  dv.setFourCC(offset, 'WAVE');\r\n  offset += 4;\r\n\r\n  // format chunk\r\n  dv.setFourCC(offset, 'fmt ');\r\n  offset += 4;\r\n  dv.setUint32(offset, 16, true);\r\n  offset += 4; // size = 16\r\n  dv.setUint16(offset, 1, true);\r\n  offset += 2; // WORD  wFormatTag\r\n  dv.setUint16(offset, _nChannels, true);\r\n  offset += 2; // WORD  nChannels\r\n  dv.setUint32(offset, _nSamplesPerSec, true);\r\n  offset += 4; // DWORD nSamplesPerSec\r\n  dv.setUint32(offset, _nAvgBytesPerSec, true);\r\n  offset += 4; // DWORD nAvgBytesPerSec\r\n  dv.setUint16(offset, _nBlockAlign, true);\r\n  offset += 2; // WORD  nBlockAlign\r\n  dv.setUint16(offset, _wBitsPerSample, true);\r\n  offset += 2; // WORD  wBitsPerSample\r\n  // PCM-format neglect 'cbSize'\r\n\r\n  // data chunk\r\n  dv.setFourCC(offset, 'data');\r\n  offset += 4;\r\n  dv.setUint32(offset, dataLengthByte, true);\r\n  offset += 4;\r\n\r\n  for (const v of audiodata) {\r\n    dv.setInt16(offset, Math.round(v * 32767), true);\r\n    offset += 2;\r\n  }\r\n\r\n  console.log(\r\n    'Info: sampling_rate = ' +\r\n      _nSamplesPerSec +\r\n      ' length = ' +\r\n      dataLengthSample +\r\n      ', [sample]'\r\n  );\r\n\r\n  return new Blob([dv], { type: 'audio/wav' });\r\n}\r\n\r\nconst procdef_str = `class AudioRecorderProcessor extends AudioWorkletProcessor\r\n{\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  static get parameterDescriptors() {\r\n    return [\r\n      { name: \"isRecording\", defaultValue: 0 }\r\n    ];\r\n  }\r\n\r\n  process(inputs, outputs, params) {\r\n    if(!inputs[0][0]) return true;\r\n\r\n    if(params.isRecording[0] > 0) {\r\n      const firstInput = inputs[0];\r\n      const firstOutput = outputs[0];\r\n      const f2s_gain = 1. / firstInput.length;\r\n      for(let n=0; n<firstInput.length; n++) {\r\n        for(let m=0; m<firstInput[0].length; m++) {\r\n          firstOutput[0][m] += firstInput[n][m] * f2s_gain;\r\n        }\r\n      }\r\n      this.port.postMessage(firstOutput[0]);\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\nregisterProcessor(\"audio-recorder-processor\", AudioRecorderProcessor);`;\r\n\r\n//const AudioContext = window.AudioContext || window.webkitAudioContext;\r\nif (navigator.mediaDevices) {\r\n  console.log('Info: getUserMedia is supported.');\r\n} else {\r\n  console.log('Error: getUserMedia is not supported.');\r\n}\r\n\r\nlet audioContext: AudioContext;\r\nlet audioRecorderNode: any; //AudioWorkletNode;\r\nlet audioSource: MediaStreamAudioSourceNode;\r\nlet mediaConfig: MediaTrackSettings;\r\n\r\nasync function prepareCustomAudioProcessor(\r\n  module_url: string,\r\n  module_name: string\r\n) {\r\n  if (!audioContext) {\r\n    try {\r\n      audioContext = new AudioContext();\r\n      await audioContext.suspend(); // or resume() ?\r\n\r\n      await audioContext.audioWorklet.addModule(module_url);\r\n      audioRecorderNode = new AudioWorkletNode(audioContext, module_name);\r\n      console.log(audioContext);\r\n    } catch (e) {\r\n      console.log(e);\r\n      return null;\r\n    }\r\n  }\r\n  return audioRecorderNode;\r\n}\r\n\r\nasync function readyAudioSource(constraints: any = undefined) {\r\n  if (!audioSource) {\r\n    try {\r\n      if (!constraints) {\r\n        constraints = {\r\n          video: false,\r\n          audio: {\r\n            channelCount: { ideal: 1 } /** channelCount will be ignored... */,\r\n            sampleRate: { ideal: audioContext.sampleRate },\r\n            sampleSize: { ideal: 16 },\r\n            autoGainControl: false,\r\n            echoCancellation: false,\r\n            noiseSuppression: false,\r\n          },\r\n        };\r\n      }\r\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n      audioSource = await audioContext.createMediaStreamSource(stream);\r\n      mediaConfig = await stream.getAudioTracks()[0].getSettings();\r\n      // Fix sampleRate\r\n      mediaConfig.sampleRate =\r\n        mediaConfig.sampleRate || audioContext.sampleRate;\r\n      console.log(stream);\r\n      console.log(mediaConfig);\r\n    } catch (e) {\r\n      console.log(e);\r\n      return null;\r\n    }\r\n  }\r\n  return audioSource;\r\n}\r\n\r\nlet buffers: any[] = [];\r\nexport let audiodata: any[]; //new Float32Array(_audiodata);\r\nexport let blob_url = '';\r\n\r\nexport async function run(\r\n  annealing_time_ms = 500\r\n): Promise<void> {\r\n  console.log('(1)');\r\n  const blob = new Blob([procdef_str], { type: 'application/javascript' });\r\n  await prepareCustomAudioProcessor(\r\n    URL.createObjectURL(blob),\r\n    'audio-recorder-processor'\r\n  );\r\n  console.log(audioRecorderNode);\r\n\r\n  console.log('(2)');\r\n  await readyAudioSource();\r\n\r\n  console.log('(3)');\r\n  await audioSource.connect(audioRecorderNode);\r\n\r\n  console.log('(4)');\r\n  await audioContext.resume();\r\n  await setTimeout(() => {\r\n    audioContext.suspend();\r\n  }, annealing_time_ms);\r\n  // In general, most of the recording device could not record just after the device booted up.\r\n  // Short wait will be make better result for the first take of recording.\r\n\r\n  return;\r\n}\r\n\r\nexport function getSampleRate(): number | undefined {\r\n  return mediaConfig.sampleRate || audioContext.sampleRate;\r\n}\r\n\r\nexport function resume(cb_func: any): void {\r\n  buffers = [];\r\n  audioRecorderNode.port.onmessage = (e: any) => {\r\n    buffers.push(e.data);\r\n    if(cb_func) cb_func(e.data);\r\n  };\r\n  audioContext.resume();\r\n  audioRecorderNode.parameters\r\n    .get('isRecording')\r\n    .setValueAtTime(1, audioContext.currentTime);\r\n  console.log('recording');\r\n}\r\n\r\nexport function suspend(): void {\r\n  audioContext.suspend();\r\n  audioRecorderNode.parameters\r\n    .get('isRecording')\r\n    .setValueAtTime(0, audioContext.currentTime);\r\n  console.log('suspended');\r\n\r\n  const dataLengthSample = buffers.reduce((a, v) => a + v.length, 0);\r\n  audiodata = new Array(dataLengthSample);\r\n\r\n  let offset = 0;\r\n  for (const buffer of buffers) {\r\n    for (const value of buffer) {\r\n      audiodata[offset++] = value;\r\n    }\r\n  }\r\n\r\n  const blob = encodeAudioAsWavfile(audiodata, mediaConfig);\r\n  console.log(blob);\r\n  blob_url = URL.createObjectURL(blob);\r\n  //       var reader = new FileReader();\r\n  //       reader.readAsDataURL(blob);\r\n  //       reader.onloadend = function() {\r\n  //         var base64data = reader.result;\r\n  //         const uiLog = document.querySelector('div#log');\r\n  //         uiLog.innerHTML += '<div style=\"width:100%; overflow-wrap: anywhere;\"><code>' + base64data + '</code></div>';\r\n  //       }\r\n}\r\n","// Copyright (c) Sunao Hara\r\n// Distributed under the terms of the Modified BSD License.\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n// @ts-ignore\r\n// eslint-disable-next-line @typescript-eslint/no-var-requires\r\nconst data = require('../package.json');\r\n\r\n/**\r\n * The _model_module_version/_view_module_version this package implements.\r\n *\r\n * The html widget manager assumes that this is the same as the npm package\r\n * version number.\r\n */\r\nexport const MODULE_VERSION = data.version;\r\n\r\n/*\r\n * The current package name.\r\n */\r\nexport const MODULE_NAME = data.name;\r\n","// Copyright (c) Sunao Hara\r\n// Distributed under the terms of the Modified BSD License.\r\n\r\nimport {\r\n  DOMWidgetModel,\r\n  DOMWidgetView,\r\n  ISerializers,\r\n} from '@jupyter-widgets/base';\r\nimport {\r\n  simplearray_serialization,\r\n} from \"jupyter-dataserializers\"\r\n\r\nimport { MODULE_NAME, MODULE_VERSION } from './version';\r\n\r\nimport * as a from './audio';\r\n\r\n// Import the CSS\r\n//import '../css/widget.css';\r\n\r\nexport class AudioRecorderModel extends DOMWidgetModel {\r\n  defaults(): Backbone.ObjectHash {\r\n    return {\r\n      ...super.defaults(),\r\n      _model_name: AudioRecorderModel.model_name,\r\n      _model_module: AudioRecorderModel.model_module,\r\n      _model_module_version: AudioRecorderModel.model_module_version,\r\n      _view_name: AudioRecorderModel.view_name,\r\n      _view_module: AudioRecorderModel.view_module,\r\n      _view_module_version: AudioRecorderModel.view_module_version,\r\n\r\n      value: 'Audio Recorder',\r\n      audiodata: new Float32Array(0),\r\n      audiochunk: new Float32Array(0),\r\n      blob_url: '',\r\n      filename: 'default.wav',\r\n      status: 'NOT_INITIALIZED'\r\n    };\r\n  }\r\n\r\n  static serializers: ISerializers = {\r\n    ...DOMWidgetModel.serializers,\r\n    audiodata: simplearray_serialization as any,\r\n    audiochunk: simplearray_serialization as any,\r\n  };\r\n\r\n  static model_name = 'AudioRecorderModel';\r\n  static model_module = MODULE_NAME;\r\n  static model_module_version = MODULE_VERSION;\r\n  static view_name = 'AudioRecorderView'; // Set to null if no view\r\n  static view_module = MODULE_NAME; // Set to null if no view\r\n  static view_module_version = MODULE_VERSION;\r\n}\r\n\r\nexport class AudioRecorderView extends DOMWidgetView {\r\n  private _audioControl: HTMLAudioElement;\r\n  private _message: HTMLDivElement;\r\n  private _bootButton: HTMLButtonElement;\r\n  private _resumeButton: HTMLButtonElement;\r\n  private _suspendButton: HTMLButtonElement;\r\n  private _useAudiochunk: Boolean = false;\r\n  render(): any {\r\n    this.el.classList.add('jupyter-widgets');\r\n\r\n    this._message = document.createElement('div');\r\n    this.el.appendChild(this._message);\r\n\r\n    this._bootButton = document.createElement('button');\r\n    this._bootButton.classList.add(\r\n      'jupyter-widgets',\r\n      'jupyter-button',\r\n      'widget-button'\r\n    );\r\n    this._bootButton.textContent = 'Boot RECORDER';\r\n    this._bootButton.title = 'run()';\r\n    this.el.appendChild(this._bootButton);\r\n\r\n    this._resumeButton = document.createElement('button');\r\n    this._resumeButton.classList.add(\r\n      'jupyter-widgets',\r\n      'jupyter-button',\r\n      'widget-button'\r\n    );\r\n    this._resumeButton.disabled = true;\r\n    this._resumeButton.textContent = 'Record';\r\n    this._resumeButton.title = 'resume()';\r\n    this.el.appendChild(this._resumeButton);\r\n\r\n    this._suspendButton = document.createElement('button');\r\n    this._suspendButton.classList.add(\r\n      'jupyter-widgets',\r\n      'jupyter-button',\r\n      'widget-button'\r\n    );\r\n    this._suspendButton.disabled = true;\r\n    this._suspendButton.textContent = 'Stop';\r\n    this._suspendButton.title = 'suspend()';\r\n    this.el.appendChild(this._suspendButton);\r\n\r\n    this._audioControl = document.createElement('audio');\r\n    this._audioControl.controls = true;\r\n    this.el.appendChild(this._audioControl);\r\n\r\n    this.value_changed();\r\n\r\n    // Python --> JavaScipt update\r\n    this.model.on('change:value', this.value_changed, this);\r\n    this.model.on('msg:custom', this.on_msg, this);\r\n\r\n    // JavaScipt --> Python update\r\n    this._bootButton.onclick = this._onClickBootButton.bind(this);\r\n    this._resumeButton.onclick = this._onClickResumeButton.bind(this);\r\n    this._suspendButton.onclick = this._onClickSuspendButton.bind(this);\r\n  }\r\n\r\n  private value_changed(): void {\r\n    this._message.textContent = this.model.get('value');\r\n  }\r\n\r\n  private on_msg(command: any, buffers: any) {\r\n    switch (command.cmd) {\r\n      case 'run':\r\n        this._onClickBootButton();\r\n        break;\r\n      case 'resume':\r\n        this._onClickResumeButton();\r\n        break;\r\n      case 'suspend':\r\n        this._onClickSuspendButton();\r\n        break;\r\n      case 'use_audiochunk':\r\n        this._useAudiochunk = command.args[0];\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _onClickBootButton() {\r\n    this.model.set('value', 'AudioRecorder is booting...');\r\n    this.model.set('status', 'INITIALIZING');\r\n    this.model.save_changes();\r\n    a.run().then((r) => {\r\n        const _sampleRate = a.getSampleRate() || -1;\r\n      this.model.set(\r\n        'value',\r\n        'AudioRecorder is ready (Sampling rate: ' +\r\n          String(_sampleRate) +\r\n          ' Hz).'\r\n      );\r\n      this.model.set('status', 'READY');\r\n      this.model.set('sampleRate', _sampleRate);\r\n      this.model.save_changes();\r\n\r\n      this._bootButton.disabled = true;\r\n      this._resumeButton.disabled = false;\r\n    });\r\n  }\r\n  private _onClickResumeButton() {\r\n    if(this._useAudiochunk) {\r\n      a.resume((datachunk: any) => {\r\n        this.model.set('audiochunk', {\r\n          array: new Float32Array(datachunk),\r\n          shape: [datachunk.length]\r\n        });\r\n        this.model.save_changes();\r\n      });\r\n    } else {\r\n        a.resume(undefined);\r\n    }\r\n    this.model.set('value', this._message.textContent + ' [RESUME]');\r\n    this.model.set('status', 'RECORDING');\r\n    this.model.save_changes();\r\n\r\n    this._resumeButton.disabled = true;\r\n    this._suspendButton.disabled = false;\r\n  }\r\n  private _onClickSuspendButton() {\r\n    a.suspend();\r\n    // console.log(a.audiodata);\r\n    this.model.set('audiodata', {\r\n      array: new Float32Array(a.audiodata),\r\n      shape: [a.audiodata.length]\r\n    });\r\n    this.model.set('blob_url', a.blob_url);\r\n    this.model.set('value', this._message.textContent + ' [SUSPEND]');\r\n    this.model.set('status', 'RECORDED');\r\n    this.model.save_changes();\r\n\r\n    this._audioControl.src = a.blob_url;\r\n    this._audioControl.title = this.model.get('filename');\r\n    this._resumeButton.disabled = false;\r\n    this._suspendButton.disabled = true;\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}