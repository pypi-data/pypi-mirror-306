[project]
name = "river-rrcf"
version = "0.1.1"
description = "Robust Random Cut Forest for the river"
authors = [
    { name = "Dowon", email = "ks2515@naver.com" },
]
readme = "README.md"
requires-python = ">=3.10"
keywords = [
    "rrcf",
    "river",
    "anomaly detection",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "river>=0.21.2",
]

[project.license]
text = "MIT"

[project.optional-dependencies]
dev = [
    "polars[plot]>=1.6.0",
    "vl-convert-python",
]
test = [
    "pytest",
    "pytest-cov",
    "pytest-sugar",
    "tox-uv",
    "hypothesis",
    "polars",
]
lint = [
    "ruff",
    "pre-commit>=4",
    "pre-commit-uv",
]

[project.urls]
Repository = "https://github.com/hellotail/river-rrcf"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.rye]
managed = true
dev-dependencies = [
    "scipy<1.14",
    "ipykernel",
    "ipywidgets",
    "tqdm",
]

[tool.ruff]
target-version = "py310"
extend-exclude = [
    "src/river_rrcf/_vendor",
]

[tool.ruff.lint]
select = [
    "A",
    "B",
    "C4",
    "C90",
    "E",
    "EM",
    "F",
    "FA",
    "FBT",
    "FURB",
    "ISC",
    "N",
    "PD",
    "PERF",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "RET",
    "RUF",
    "S",
    "SIM",
    "T20",
    "TRY",
    "UP",
    "W",
]
ignore = [
    "E501",
]
unfixable = [
    "F401",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101",
]

[tool.pytest.ini_options]
addopts = [
    "--no-cov-on-fail",
    "--cov-config=pyproject.toml",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
omit = [
    "*/_vendor/*",
]

[tool.coverage.report]
exclude_also = [
    "if __name__ == \"__main__\":",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "pytest.fail\\(.*",
]
