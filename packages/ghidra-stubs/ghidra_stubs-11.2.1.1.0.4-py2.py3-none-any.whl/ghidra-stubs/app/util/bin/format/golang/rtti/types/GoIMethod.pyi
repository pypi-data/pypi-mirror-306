from typing import List
from typing import overload
import ghidra.app.util.bin.format.golang.rtti
import ghidra.app.util.bin.format.golang.rtti.types
import ghidra.app.util.bin.format.golang.structmapping
import ghidra.program.model.address
import ghidra.program.model.data
import java.lang


class GoIMethod(object, ghidra.app.util.bin.format.golang.structmapping.StructureMarkup):





    class GoIMethodInfo(ghidra.app.util.bin.format.golang.rtti.MethodInfo):




        def __init__(self, __a0: ghidra.app.util.bin.format.golang.rtti.GoItab, __a1: ghidra.app.util.bin.format.golang.rtti.types.GoIMethod, __a2: ghidra.program.model.address.Address): ...



        def equals(self, __a0: object) -> bool: ...

        def getAddress(self) -> ghidra.program.model.address.Address: ...

        def getClass(self) -> java.lang.Class: ...

        def getImethod(self) -> ghidra.app.util.bin.format.golang.rtti.types.GoIMethod: ...

        def getItab(self) -> ghidra.app.util.bin.format.golang.rtti.GoItab: ...

        def getSignature(self) -> ghidra.program.model.data.FunctionDefinition: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        @property
        def imethod(self) -> ghidra.app.util.bin.format.golang.rtti.types.GoIMethod: ...

        @property
        def itab(self) -> ghidra.app.util.bin.format.golang.rtti.GoItab: ...

        @property
        def signature(self) -> ghidra.program.model.data.FunctionDefinition: ...

    def __init__(self): ...



    def additionalMarkup(self, __a0: ghidra.app.util.bin.format.golang.structmapping.MarkupSession) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getExternalInstancesToMarkup(self) -> List[object]: ...

    def getGoName(self) -> ghidra.app.util.bin.format.golang.rtti.GoName: ...

    def getName(self) -> unicode: ...

    def getStructureContext(self) -> ghidra.app.util.bin.format.golang.structmapping.StructureContext: ...

    def getStructureLabel(self) -> unicode: ...

    def getStructureName(self) -> unicode: ...

    def getStructureNamespace(self) -> unicode: ...

    def getType(self) -> ghidra.app.util.bin.format.golang.rtti.types.GoType: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def externalInstancesToMarkup(self) -> List[object]: ...

    @property
    def goName(self) -> ghidra.app.util.bin.format.golang.rtti.GoName: ...

    @property
    def name(self) -> unicode: ...

    @property
    def structureContext(self) -> ghidra.app.util.bin.format.golang.structmapping.StructureContext: ...

    @property
    def structureLabel(self) -> unicode: ...

    @property
    def structureName(self) -> unicode: ...

    @property
    def structureNamespace(self) -> unicode: ...

    @property
    def type(self) -> ghidra.app.util.bin.format.golang.rtti.types.GoType: ...