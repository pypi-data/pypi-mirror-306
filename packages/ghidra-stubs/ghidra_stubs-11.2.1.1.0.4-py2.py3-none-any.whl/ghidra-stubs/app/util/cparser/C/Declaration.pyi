from typing import List
from typing import overload
import ghidra.app.util.cparser.C
import ghidra.program.model.data
import java.lang


class Declaration(object):
    """
    Container for information about a Declaration that is accumulated during parsing.
    """





    @overload
    def __init__(self): ...

    @overload
    def __init__(self, name: unicode): ...

    @overload
    def __init__(self, dec: ghidra.app.util.cparser.C.Declaration): ...

    @overload
    def __init__(self, dt: ghidra.program.model.data.DataType): ...

    @overload
    def __init__(self, dec: ghidra.app.util.cparser.C.Declaration, name: unicode): ...

    @overload
    def __init__(self, dt: ghidra.program.model.data.DataType, name: unicode): ...

    @overload
    def __init__(self, subDecl: ghidra.app.util.cparser.C.Declaration, dt: ghidra.program.model.data.DataType): ...

    @overload
    def __init__(self, dt: ghidra.program.model.data.DataType, name: unicode, comment: unicode): ...



    def addQualifier(self, qualifier: int) -> None: ...

    def addQualifiers(self, dec: ghidra.app.util.cparser.C.Declaration) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getBitFieldSize(self) -> int:
        """
        @return the currently set bitfield size
        """
        ...

    def getClass(self) -> java.lang.Class: ...

    def getComment(self) -> unicode: ...

    def getDataType(self) -> ghidra.program.model.data.DataType: ...

    def getName(self) -> unicode: ...

    def getQualifiers(self) -> List[int]: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setComment(self, string: unicode) -> None: ...

    def setDataType(self, type: ghidra.program.model.data.DataType) -> None: ...

    def setName(self, string: unicode) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def bitFieldSize(self) -> int: ...

    @property
    def comment(self) -> unicode: ...

    @comment.setter
    def comment(self, value: unicode) -> None: ...

    @property
    def dataType(self) -> ghidra.program.model.data.DataType: ...

    @dataType.setter
    def dataType(self, value: ghidra.program.model.data.DataType) -> None: ...

    @property
    def name(self) -> unicode: ...

    @name.setter
    def name(self, value: unicode) -> None: ...

    @property
    def qualifiers(self) -> List[object]: ...