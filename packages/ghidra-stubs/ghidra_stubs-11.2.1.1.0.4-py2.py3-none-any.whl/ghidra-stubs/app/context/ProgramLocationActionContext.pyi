from typing import overload
import docking
import ghidra.app.context
import ghidra.program.model.address
import ghidra.program.model.listing
import ghidra.program.util
import java.awt
import java.awt.event
import java.lang
import java.util


class ProgramLocationActionContext(ghidra.app.context.ProgramActionContext, ghidra.app.context.FunctionSupplierContext):




    def __init__(self, provider: docking.ComponentProvider, program: ghidra.program.model.listing.Program, location: ghidra.program.util.ProgramLocation, selection: ghidra.program.util.ProgramSelection, highlight: ghidra.program.util.ProgramSelection): ...



    def equals(self, __a0: object) -> bool: ...

    def getAddress(self) -> ghidra.program.model.address.Address:
        """
        @return address corresponding to the action's program location or null
         if program location is null.
        """
        ...

    def getClass(self) -> java.lang.Class: ...

    def getCodeUnit(self) -> ghidra.program.model.listing.CodeUnit:
        """
        Returns the code unit containing the action's program location or null
        @return the code unit containing the action's program location or null
        """
        ...

    def getComponentProvider(self) -> docking.ComponentProvider: ...

    def getContextObject(self) -> object: ...

    def getEventClickModifiers(self) -> int: ...

    def getFunctions(self) -> java.util.Set: ...

    def getHighlight(self) -> ghidra.program.util.ProgramSelection: ...

    def getLocation(self) -> ghidra.program.util.ProgramLocation:
        """
        @return Returns the program location.
        """
        ...

    def getMouseEvent(self) -> java.awt.event.MouseEvent: ...

    def getProgram(self) -> ghidra.program.model.listing.Program: ...

    def getSelection(self) -> ghidra.program.util.ProgramSelection:
        """
        @return Returns the program selection.
        """
        ...

    def getSourceComponent(self) -> java.awt.Component: ...

    def getSourceObject(self) -> object: ...

    def hasAnyEventClickModifiers(self, modifiersMask: int) -> bool: ...

    def hasFunctions(self) -> bool: ...

    def hasHighlight(self) -> bool: ...

    def hasSelection(self) -> bool: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setContextObject(self, contextObject: object) -> docking.DefaultActionContext: ...

    def setEventClickModifiers(self, modifiers: int) -> None: ...

    def setMouseEvent(self, e: java.awt.event.MouseEvent) -> docking.DefaultActionContext: ...

    def setSourceComponent(self, sourceComponent: java.awt.Component) -> docking.ActionContext: ...

    def setSourceObject(self, sourceObject: object) -> docking.DefaultActionContext: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def address(self) -> ghidra.program.model.address.Address: ...

    @property
    def codeUnit(self) -> ghidra.program.model.listing.CodeUnit: ...

    @property
    def functions(self) -> java.util.Set: ...

    @property
    def highlight(self) -> ghidra.program.util.ProgramSelection: ...

    @property
    def location(self) -> ghidra.program.util.ProgramLocation: ...

    @property
    def selection(self) -> ghidra.program.util.ProgramSelection: ...