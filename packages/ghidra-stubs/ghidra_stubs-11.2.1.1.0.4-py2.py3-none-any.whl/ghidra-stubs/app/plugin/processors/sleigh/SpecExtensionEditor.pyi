from typing import overload
import ghidra.framework.options
import java.beans
import java.lang
import javax.swing


class SpecExtensionEditor(object, ghidra.framework.options.OptionsEditor, java.beans.PropertyChangeListener):




    def __init__(self, program: ghidra.program.database.ProgramDB): ...



    def apply(self) -> None: ...

    def cancel(self) -> None: ...

    def dispose(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getEditorComponent(self, options: ghidra.framework.options.Options, editorStateFactory: ghidra.framework.options.EditorStateFactory) -> javax.swing.JComponent: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def propertyChange(self, evt: java.beans.PropertyChangeEvent) -> None: ...

    def reload(self) -> None: ...

    def setOptionsPropertyChangeListener(self, listener: java.beans.PropertyChangeListener) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

