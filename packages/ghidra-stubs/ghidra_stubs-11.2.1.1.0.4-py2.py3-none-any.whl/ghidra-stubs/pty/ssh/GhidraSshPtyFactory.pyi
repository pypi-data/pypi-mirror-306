from typing import overload
import ghidra.pty
import ghidra.pty.ssh
import java.lang


class GhidraSshPtyFactory(object, ghidra.pty.PtyFactory):
    DEFAULT_COLS: int = 80
    DEFAULT_CONFIG_FILE: unicode = u'~/.ssh/config'
    DEFAULT_HOSTNAME: unicode = u'localhost'
    DEFAULT_PORT: int = 22
    DEFAULT_ROWS: int = 25
    DEFAULT_USERNAME: unicode = u'user'



    def __init__(self): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getConfigFile(self) -> unicode: ...

    def getDescription(self) -> unicode: ...

    def getHostname(self) -> unicode: ...

    def getPort(self) -> int: ...

    def getUsername(self) -> unicode: ...

    def hashCode(self) -> int: ...

    @staticmethod
    def local() -> ghidra.pty.PtyFactory: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    @overload
    def openpty(self) -> ghidra.pty.Pty: ...

    @overload
    def openpty(self, cols: int, rows: int) -> ghidra.pty.ssh.SshPty: ...

    @overload
    def openpty(self, cols: int, rows: int) -> ghidra.pty.ssh.SshPty: ...

    def setConfigFile(self, configFile: unicode) -> None: ...

    def setHostname(self, hostname: unicode) -> None: ...

    def setPort(self, port: int) -> None: ...

    def setUsername(self, username: unicode) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def configFile(self) -> unicode: ...

    @configFile.setter
    def configFile(self, value: unicode) -> None: ...

    @property
    def description(self) -> unicode: ...

    @property
    def hostname(self) -> unicode: ...

    @hostname.setter
    def hostname(self, value: unicode) -> None: ...

    @property
    def port(self) -> int: ...

    @port.setter
    def port(self, value: int) -> None: ...

    @property
    def username(self) -> unicode: ...

    @username.setter
    def username(self, value: unicode) -> None: ...