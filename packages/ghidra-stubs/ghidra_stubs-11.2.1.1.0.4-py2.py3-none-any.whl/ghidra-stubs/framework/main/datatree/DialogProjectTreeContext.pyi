from typing import List
from typing import overload
import docking
import docking.widgets.tree
import ghidra.framework.main.datatable
import ghidra.framework.main.datatree
import ghidra.framework.model
import java.awt
import java.awt.event
import java.lang
import javax.swing.tree


class DialogProjectTreeContext(docking.DefaultActionContext, ghidra.framework.main.datatable.ProjectTreeContext):
    """
    Context specific to the DataTreeDialog.
    """





    def __init__(self, __a0: ghidra.framework.model.ProjectData, __a1: List[javax.swing.tree.TreePath], __a2: List[object], __a3: List[object], __a4: ghidra.framework.main.datatree.DataTree): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getComponentProvider(self) -> docking.ComponentProvider: ...

    def getContextNode(self) -> docking.widgets.tree.GTreeNode: ...

    def getContextObject(self) -> object: ...

    def getEventClickModifiers(self) -> int: ...

    def getFileCount(self) -> int: ...

    def getFolderCount(self) -> int: ...

    def getMouseEvent(self) -> java.awt.event.MouseEvent: ...

    def getSelectedFiles(self) -> List[ghidra.framework.model.DomainFile]: ...

    def getSelectedFolders(self) -> List[ghidra.framework.model.DomainFolder]: ...

    def getSelectionPaths(self) -> List[javax.swing.tree.TreePath]: ...

    def getSourceComponent(self) -> java.awt.Component: ...

    def getSourceObject(self) -> object: ...

    def getTree(self) -> ghidra.framework.main.datatree.DataTree: ...

    def hasAnyEventClickModifiers(self, modifiersMask: int) -> bool: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setContextObject(self, contextObject: object) -> docking.DefaultActionContext: ...

    def setEventClickModifiers(self, modifiers: int) -> None: ...

    def setMouseEvent(self, e: java.awt.event.MouseEvent) -> docking.DefaultActionContext: ...

    def setSourceComponent(self, sourceComponent: java.awt.Component) -> docking.ActionContext: ...

    def setSourceObject(self, sourceObject: object) -> docking.DefaultActionContext: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def contextNode(self) -> docking.widgets.tree.GTreeNode: ...

    @property
    def fileCount(self) -> int: ...

    @property
    def folderCount(self) -> int: ...

    @property
    def selectedFiles(self) -> List[object]: ...

    @property
    def selectedFolders(self) -> List[object]: ...

    @property
    def selectionPaths(self) -> List[javax.swing.tree.TreePath]: ...

    @property
    def tree(self) -> ghidra.framework.main.datatree.DataTree: ...