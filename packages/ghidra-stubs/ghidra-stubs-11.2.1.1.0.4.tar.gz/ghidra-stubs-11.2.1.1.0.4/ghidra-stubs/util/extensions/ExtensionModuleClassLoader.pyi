from typing import List
from typing import overload
import java.io
import java.lang
import java.net
import java.util
import java.util.stream


class ExtensionModuleClassLoader(java.net.URLClassLoader):
    """
    A class loader used with Ghidra extensions.
    """





    def __init__(self, extensionDir: ghidra.util.extensions.ExtensionDetails): ...



    def clearAssertionStatus(self) -> None: ...

    def close(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def findResource(self, __a0: unicode) -> java.net.URL: ...

    def findResources(self, __a0: unicode) -> java.util.Enumeration: ...

    def getClass(self) -> java.lang.Class: ...

    def getDefinedPackage(self, __a0: unicode) -> java.lang.Package: ...

    def getDefinedPackages(self) -> List[java.lang.Package]: ...

    def getName(self) -> unicode: ...

    def getParent(self) -> java.lang.ClassLoader: ...

    @staticmethod
    def getPlatformClassLoader() -> java.lang.ClassLoader: ...

    def getResource(self, __a0: unicode) -> java.net.URL: ...

    def getResourceAsStream(self, __a0: unicode) -> java.io.InputStream: ...

    def getResources(self, __a0: unicode) -> java.util.Enumeration: ...

    @staticmethod
    def getSystemClassLoader() -> java.lang.ClassLoader: ...

    @staticmethod
    def getSystemResource(__a0: unicode) -> java.net.URL: ...

    @staticmethod
    def getSystemResourceAsStream(__a0: unicode) -> java.io.InputStream: ...

    @staticmethod
    def getSystemResources(__a0: unicode) -> java.util.Enumeration: ...

    def getURLs(self) -> List[java.net.URL]: ...

    def getUnnamedModule(self) -> java.lang.Module: ...

    def hashCode(self) -> int: ...

    def isRegisteredAsParallelCapable(self) -> bool: ...

    def loadClass(self, __a0: unicode) -> java.lang.Class: ...

    @overload
    @staticmethod
    def newInstance(__a0: List[java.net.URL]) -> java.net.URLClassLoader: ...

    @overload
    @staticmethod
    def newInstance(__a0: List[java.net.URL], __a1: java.lang.ClassLoader) -> java.net.URLClassLoader: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def resources(self, __a0: unicode) -> java.util.stream.Stream: ...

    def setClassAssertionStatus(self, __a0: unicode, __a1: bool) -> None: ...

    def setDefaultAssertionStatus(self, __a0: bool) -> None: ...

    def setPackageAssertionStatus(self, __a0: unicode, __a1: bool) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

