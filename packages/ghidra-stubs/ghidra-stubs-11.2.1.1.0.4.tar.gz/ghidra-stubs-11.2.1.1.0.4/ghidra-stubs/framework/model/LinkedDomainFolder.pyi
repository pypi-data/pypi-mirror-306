from typing import List
from typing import overload
import ghidra.framework.model
import ghidra.util.task
import java.io
import java.lang
import java.net
import javax.swing


class LinkedDomainFolder(ghidra.framework.model.DomainFolder, object):
    """
     extends DomainFolder for all folders which are 
     accessable via a folder-link (see FolderLinkContentHandler).
    """

    CLOSED_FOLDER_ICON: javax.swing.Icon
    COPY_SUFFIX: unicode = u'.copy'
    OPEN_FOLDER_ICON: javax.swing.Icon
    SEPARATOR: unicode = u'/'







    def compareTo(self, __a0: object) -> int: ...

    def copyTo(self, __a0: ghidra.framework.model.DomainFolder, __a1: ghidra.util.task.TaskMonitor) -> ghidra.framework.model.DomainFolder: ...

    def copyToAsLink(self, __a0: ghidra.framework.model.DomainFolder) -> ghidra.framework.model.DomainFile: ...

    @overload
    def createFile(self, __a0: unicode, __a1: ghidra.framework.model.DomainObject, __a2: ghidra.util.task.TaskMonitor) -> ghidra.framework.model.DomainFile: ...

    @overload
    def createFile(self, __a0: unicode, __a1: java.io.File, __a2: ghidra.util.task.TaskMonitor) -> ghidra.framework.model.DomainFile: ...

    def createFolder(self, __a0: unicode) -> ghidra.framework.model.DomainFolder: ...

    def delete(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getFile(self, __a0: unicode) -> ghidra.framework.model.DomainFile: ...

    def getFiles(self) -> List[ghidra.framework.model.DomainFile]: ...

    def getFolder(self, __a0: unicode) -> ghidra.framework.model.DomainFolder: ...

    def getFolders(self) -> List[ghidra.framework.model.DomainFolder]: ...

    def getIcon(self, isOpen: bool) -> javax.swing.Icon:
        """
        Get the appropriate icon for this folder
        @param isOpen true if open icon, false for closed
        @return folder icon
        """
        ...

    def getLinkedFolder(self) -> ghidra.framework.model.DomainFolder:
        """
        Get the real domain folder which corresponds to this linked-folder.
        @return domain folder
        @throws IOException if an IO error occurs
        """
        ...

    def getLocalProjectURL(self) -> java.net.URL: ...

    def getName(self) -> unicode: ...

    def getParent(self) -> ghidra.framework.model.DomainFolder: ...

    def getPathname(self) -> unicode: ...

    def getProjectData(self) -> ghidra.framework.model.ProjectData: ...

    def getProjectLocator(self) -> ghidra.framework.model.ProjectLocator: ...

    def getSharedProjectURL(self) -> java.net.URL: ...

    def hashCode(self) -> int: ...

    def isEmpty(self) -> bool: ...

    def isInWritableProject(self) -> bool: ...

    def isLinked(self) -> bool: ...

    def moveTo(self, __a0: ghidra.framework.model.DomainFolder) -> ghidra.framework.model.DomainFolder: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setActive(self) -> None: ...

    def setName(self, __a0: unicode) -> ghidra.framework.model.DomainFolder: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def empty(self) -> bool: ...

    @property
    def files(self) -> List[ghidra.framework.model.DomainFile]: ...

    @property
    def folders(self) -> List[ghidra.framework.model.DomainFolder]: ...

    @property
    def inWritableProject(self) -> bool: ...

    @property
    def linked(self) -> bool: ...

    @property
    def linkedFolder(self) -> ghidra.framework.model.DomainFolder: ...

    @property
    def localProjectURL(self) -> java.net.URL: ...

    @property
    def name(self) -> unicode: ...

    @name.setter
    def name(self, value: unicode) -> None: ...

    @property
    def parent(self) -> ghidra.framework.model.DomainFolder: ...

    @property
    def pathname(self) -> unicode: ...

    @property
    def projectData(self) -> ghidra.framework.model.ProjectData: ...

    @property
    def projectLocator(self) -> ghidra.framework.model.ProjectLocator: ...

    @property
    def sharedProjectURL(self) -> java.net.URL: ...