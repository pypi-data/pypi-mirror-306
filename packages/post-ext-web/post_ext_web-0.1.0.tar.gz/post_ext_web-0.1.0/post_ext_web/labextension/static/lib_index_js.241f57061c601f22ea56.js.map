{"version":3,"file":"lib_index_js.241f57061c601f22ea56.js","mappings":";;;;;;;;;;;;;;;;;;;AAIuD;AACgE;AACzD;AAE9D;;GAEG;AAEH,MAAM,OAAO,GAAG,cAAc,CAAC;AAC/B,MAAM,GAAG,GAAG,iCAAiC,CAAC;AAC9C,IAAI,OAAO,GAAsC,IAAI,CAAC,CAAC,0BAA0B;AAEjF,MAAM,cAAc,GAAG,eAAe,CAAC;AAEvC,MAAM,MAAM,GAAgC;IAC1C,EAAE,EAAE,qBAAqB;IACzB,WAAW,EAAE,iEAAiE;IAC9E,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,CAAC,iEAAe,EAAE,wEAAmB,CAAC;IAChD,QAAQ,EAAE,CAAC,GAAoB,EAAE,OAAwB,EAAE,kBAAuC,EAAE,EAAE;QACpG,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;QAC/D,MAAM,EAAE,OAAO,EAAE,GAAG,kBAAkB,CAAC;QACvC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,cAAc,EAAE;YACtC,KAAK,EAAE,QAAQ;YACf,OAAO,EAAE,QAAQ;YACjB,OAAO,EAAE,KAAK,EAAE,IAAS,EAAE,EAAE;gBAC3B,4BAA4B;gBAC5B,MAAM,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC;gBACrC,IAAI,CAAC,MAAM,EAAE;oBACX,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;oBACzB,OAAO;iBACR;gBACD,MAAM,IAAI,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC,IAAI,EAAE,CAAC;gBAC3C,6CAA6C;gBAC7C,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACrD,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBAClC,kBAAkB,CAAC,SAAS,CAAC,CAAC;YAChC,CAAC;SACF,CAAC,CAAC;QAEH,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,cAAc,EAAC,EAAE,CAAC,CAAC;QAExF,2EAA2E;QAC3E,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC;YACtB,OAAO,EAAE,cAAc;YACvB,QAAQ,EAAE,wCAAwC;YAClD,IAAI,EAAE,EAAE;SACT,CAAC,CAAC;IAEL,CAAC;CACF,CAAC;AAEF,KAAK,UAAU,kBAAkB,CAAC,SAAiB;IACjD,0BAA0B;IAC1B,MAAM,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;IACxC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;IACxC,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACrD,MAAM,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC3C,MAAM,QAAQ,GAAG,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;IAC7E,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;IAC3C,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,kBAAkB,CAAC,OAAO,EAAC,QAAQ,EAAC,SAAS,CAAC,CAAC;SAC1E,KAAK,CAAC,KAAK,CAAC,EAAE;QACb,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAC,KAAK,CAAC,CAAC;IAC3C,CAAC,CAAC;IACJ,OAAO,CAAC,GAAG,CAAC,WAAW,GAAC,OAAO,CAAC,CAAC;IACjC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAC5B,MAAM,CAAC,IAAI,CAAC,GAAG,GAAC,GAAG,GAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AAC1C,CAAC;AAED,SAAS,kBAAkB,CAAC,OAAe,EAAE,QAAgB,EAAE,SAAiB;IAC9E,IAAI,IAAI,GAAG;;SAEJ,GAAC,OAAO,GAAC;;;;;;;;;;;;;;;;;;;WAmBP,GAAC,OAAO,GAAC,GAAG,GAAC,QAAQ,GAAC;;;;oBAIb,GAAC,OAAO,GAAC,GAAG,GAAC,QAAQ,GAAC;;gBAE1B,GAAC,OAAO,GAAC,GAAG,GAAC,QAAQ,GAAC;;2BAEX,GAAC,SAAS,GAAC,MAAM,GAAC,OAAO,GAAC,GAAG,GAAC,QAAQ,GAAC;;;;;;mBAM/C,CAAC;IAClB,OAAO,IAAI,CAAC;AACd,CAAC;AAED,KAAK,UAAU,OAAO,CAAC,UAAkB;IACvC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IACnC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACxB,OAAO,CAAC,GAAG,EAAE,CAAC;IAEd,qDAAqD;IACrD,MAAM,YAAY,EAAE,CAAC;IAErB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;;QACnC,MAAM,MAAM,GAAG,aAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,0CAAE,cAAc,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;QAErE,IAAI,CAAC,MAAM,EAAE;YACT,MAAM,CAAC,kCAAkC,CAAC,CAAC;YAC3C,OAAO;SACV;QAED,MAAM,CAAC,OAAO,GAAG,CAAC,GAA2B,EAAE,EAAE;YAC7C,iEAAiE;YACjE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,GAAG,CAAC,MAAM,CAAC,QAAQ,KAAK,QAAQ,IAAI,MAAM,IAAI,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;gBAC5F,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC;gBAC7D,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAClD,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,OAAO,EAAE;oBAC3G,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC,CAAC;iBAC3D;aACF;QACL,CAAC,CAAC;QAEF,2DAA2D;QAC3D,MAAM,CAAC,IAAI;aACN,IAAI,CAAC,GAAG,EAAE;YACP,IAAI,OAAO,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;gBAC1C,OAAO,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;oBACzB,OAAO,GAAG,IAAI,CAAC,CAAC,4CAA4C;oBAC5D,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;gBAC/C,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE;oBACrB,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,aAAa,CAAC,CAAC;gBACnE,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACb,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;YAChD,MAAM,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;AACL,CAAC;AAED,KAAK,UAAU,YAAY;IACzB,IAAI,OAAO,EAAE;QACT,OAAO,CAAC,8CAA8C;KACzD;IAED,MAAM,cAAc,GAAG,kEAAgB,CAAC,YAAY,EAAE,CAAC;IACvD,gEAAgE;IAChE,4CAA4C;IAC5C,MAAM,aAAa,GAAG,IAAI,+DAAa,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;IAC5D,MAAM,cAAc,GAAG,IAAI,gEAAc,CAAC,EAAE,aAAa,EAAE,cAAc,EAAE,CAAC,CAAC;IAE7E,kEAAkE;IAClE,MAAM,WAAW,GAAkB;QACjC,IAAI,EAAE,SAAS;QACf,EAAE,EAAE,SAAS;KACd,CAAC;IAEF,6CAA6C;IAC7C,OAAO,GAAG,MAAM,cAAc,CAAC,QAAQ,CAAC;QACtC,MAAM,EAAE,WAAW;QACnB,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,oBAAoB;KAC7B,CAAC,CAAC;AACH,CAAC;AAED,iEAAe,MAAM,EAAC","sources":["webpack://post_ext_web/./src/index.ts"],"sourcesContent":["import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { ICommandPalette } from '@jupyterlab/apputils';\nimport { Kernel, KernelManager, ServerConnection, SessionManager, KernelMessage, Session } from '@jupyterlab/services';\nimport { IFileBrowserFactory } from '@jupyterlab/filebrowser';\n\n/**\n * Initialization data for the post_ext_web extension.\n */\n\nconst webPath = '/mnt/tljhweb';\nconst URL = 'https://tljhweb.ictsoeasy.co.uk';\nlet session: Session.ISessionConnection | null = null; // Global session variable\n\nconst webify_command = 'webify:webify';\n\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'post_ext_web:plugin',\n  description: 'A JupyterLab extension to post a folder to an external website.',\n  autoStart: true,\n  requires: [ICommandPalette, IFileBrowserFactory],\n  activate: (app: JupyterFrontEnd, palette: ICommandPalette, fileBrowserFactory: IFileBrowserFactory) => {\n    console.log('JupyterLab extension post_ext_web is activated!');\n    const { tracker } = fileBrowserFactory;\n    app.commands.addCommand(webify_command, {\n      label: 'Webify',\n      caption: 'Webify',\n      execute: async (args: any) => {\n        //console.log('Args:'+args);\n        const widget = tracker.currentWidget;\n        if (!widget) {\n          console.log('No widget');\n          return;\n        }\n        const path = widget.selectedItems().next();\n        //console.log(JSON.stringify(path, null, 2));\n        console.log('We are going to move:'+path.value.path);\n        const localPath = path.value.path;\n        moveFilesForWebify(localPath);\n      }\n    });\n\n    const category = 'WHO';\n    palette.addItem({ command: webify_command, category, args: { origin: 'from palette'} });\n    \n    // Add the command to the file browser context menu, limited to directories\n    app.contextMenu.addItem({\n      command: webify_command,\n      selector: '.jp-DirListing-item[data-isdir=\"true\"]', // Ensures it only appears for folders\n      rank: 10\n    });\n\n  }\n};\n\nasync function moveFilesForWebify(localPath: string) {\n  // Identify student's name\n  const currentURL = window.location.href;\n  console.log(\"Current URL:\", currentURL);\n  const urlParts = window.location.pathname.split('/');\n  const userIndex = urlParts.indexOf('user');\n  const username = userIndex !== -1 ? urlParts[userIndex + 1] : \"Unknown User\";\n  console.log(\"Current Username:\", username);\n  const codeRun = await runCode(generatePythonCode(webPath,username,localPath))\n    .catch(error => {\n      console.log('Error running code:',error);\n    })\n  console.log('Code run:'+codeRun);\n  console.log('All finished');\n  window.open(URL+'/'+username, '_blank');\n}\n\nfunction generatePythonCode(webPath: string, userName: string, localPath: string): string {\n  var code = `import os\nimport shutil\npath = '`+webPath+`'\ndef copy_folder_contents(src, dest):\n    # Ensure the destination directory exists\n    os.makedirs(dest, exist_ok=True)\n\n    # Copy each item within the source directory to the destination\n    for item in os.listdir(src):\n        s = os.path.join(src, item)\n        d = os.path.join(dest, item)\n        if os.path.isdir(s):\n            shutil.copytree(s, d)  # Copy subdirectory and its contents\n        else:\n            shutil.copy2(s, d)     # Copy file\n\nexists = os.path.exists(path)\nif (not exists):\n  print('Web Path does not exist. Exiting');\n  print('false');\nelse:\n  path = '`+webPath+'/'+userName+`'\n  exists = os.path.exists(path)\n  if exists:\n    print('User path alredy exists')\n    shutil.rmtree('`+webPath+'/'+userName+`')\n  print('Creating new path')\n  os.makedirs('`+webPath+'/'+userName+`', exist_ok=True)\n  try:\n    copy_folder_contents('`+localPath+`', '`+webPath+'/'+userName+`')\n    print('Copied!')\n    print('true')\n  except Exception as e:\n    print('Error occurred while copying:')\n    print(e)\n    print('false')`;\n  return code;\n}\n\nasync function runCode(pythonCode: string): Promise<boolean> {\n  console.log('Running Python code');\n  console.log(pythonCode);\n  console.log();\n\n  // Ensure the session is set up before executing code\n  await setupSession();\n\n  return new Promise((resolve, reject) => {\n      const future = session?.kernel?.requestExecute({ code: pythonCode });\n\n      if (!future) {\n          reject('Failed to create kernel session.');\n          return;\n      }\n\n      future.onIOPub = (msg: KernelMessage.IMessage) => {\n          // Check if the message is of type 'stream' and contains 'stdout'\n          console.log(msg);\n          if (msg.header.msg_type === 'stream' && 'name' in msg.content && msg.content.name === 'stdout') {\n              console.log('>> Stdout: ' + msg.content.text.trim() + ' <<');\n              const lines = msg.content.text.trim().split('\\n');\n              if (lines[lines.length - 1].toLowerCase() === \"true\" || lines[lines.length - 1].toLowerCase() === \"false\") {\n              resolve(lines[lines.length - 1].toLowerCase() === \"true\");\n            }\n          }\n      };\n\n      // Ensure the session is properly shut down after execution\n      future.done\n          .then(() => {\n              if (session) {\n                  console.log(\"Shutting down the session.\");\n                  session.shutdown().then(() => {\n                      session = null; // Reset session to allow re-setup if needed\n                      console.log(\"Session has been shut down.\");\n                  }).catch(shutdownError => {\n                      console.error(\"Error during session shutdown:\", shutdownError);\n                  });\n              }\n          })\n          .catch((error) => {\n              console.error(\"Error during execution:\", error);\n              reject(error);\n          });\n  });\n}\n\nasync function setupSession(): Promise<void> {\n  if (session) {\n      return; // If session already exists, skip re-creation\n  }\n\n  const serverSettings = ServerConnection.makeSettings();\n  //const sessionManager = new SessionManager({ serverSettings });\n  // Create KernelManager with server settings\n  const kernelManager = new KernelManager({ serverSettings });\n  const sessionManager = new SessionManager({ kernelManager, serverSettings });\n\n  // Define the kernel model for the desired kernel (e.g., Python 3)\n  const kernelModel: Kernel.IModel = {\n    name: 'python3',\n    id: 'python3'\n  };\n\n  // Start a new session with a Python 3 kernel\n  session = await sessionManager.startNew({\n    kernel: kernelModel,\n    path: '',\n    type: 'file',\n    name: 'PathCheckerSession'\n});\n}\n\nexport default plugin;\n"],"names":[],"sourceRoot":""}