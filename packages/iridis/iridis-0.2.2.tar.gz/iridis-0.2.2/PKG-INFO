Metadata-Version: 2.3
Name: iridis
Version: 0.2.2
Summary: library for a colorful terminal!
Author-email: Tobias Filgas <tobiasfilgas@gmail.com>
Maintainer-email: Tobias Filgas <tobiasfilgas@gmail.com>
License: MIT License
        
        Copyright (c) 2020 NeuralNine
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Requires-Python: >=3.8
Description-Content-Type: text/markdown

# Iridis

This library provides functions to print styled text in the console, with support for color-coded messages and rainbow text effects.

## Color Enum

The `Color` enum defines various color codes that can be used with the functions below.

```python
from enum import Enum

class Color(Enum):
    RED = "\033[91m"
    GREEN = "\033[92m"
    YELLOW = "\033[93m"
    BLUE = "\033[94m"
    PURPLE = "\033[95m"
    # Additional colors available (e.g., BRIGHT, BG colors)
```

## Functions

### `print_with_color(*values: object, color: Color)`

Prints the given values in the specified color.

- **values**: Objects to print.
- **color**: `Color` enum specifying the text color.

**Example:**

```python
print_with_color("Hello, World!", color=Color.BLUE)
```

---

### `print_error(*values: object)`

Prints the values in red to indicate an error.

- **values**: Objects representing the error message.

**Example:**

```python
print_error("This is an error message.")
```

---

### `print_title(*values: object)`

Prints the values in green to indicate a title or header.

- **values**: Objects representing the title text.

**Example:**

```python
print_title("Welcome to the Application")
```

---

### `print_rainbow(*values: object)`

Prints the values with a rainbow color effect.

- **values**: Objects to print with each character in a different color.

**Example:**

```python
print_rainbow("This text is in rainbow colors!")
```

---

### `get_number_from_user(input_text: str, error_message: str, conditions: list) -> float`

Prompts the user for a number and validates it against optional conditions.

- **input_text**: Prompt text (default: "Vložte číslo:").
- **error_message**: Error message shown if input is invalid (default: "Špatný vstup, zkuste znova!").
- **conditions**: List of boolean lambda conditions to validate the input.

**Example:**

```python
get_number_from_user("Enter a number: ", "Invalid input!", conditions=[lambda x: x > 0])
```
