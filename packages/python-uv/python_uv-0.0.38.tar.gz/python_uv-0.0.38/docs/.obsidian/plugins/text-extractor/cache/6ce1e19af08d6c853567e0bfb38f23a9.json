{"path":"assets/AstraPro_SDK_install.pdf","text":"Astra Pro SDK 的安装及使用 Hiwonder 2022 年 5 月 4 日 1 目录 1. Astra ROS SDK 的安装测试 4 1.1 Astra ROS SDK 的介绍 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4 1.2 Astra ROS SDK 的编译安装 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4 1.3 Astra ROS SDK 上 Astra Pro 的测试和使用 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 1.3.1 如何启动相机? . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 1.3.2 如何查看相机图像？ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 1.3.3 如何通过修改软件层来降低帧率？ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 1.3.4 如何同时启动多个相机？ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 1.4 可能遇到的问题及解决方法 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7 1.4.1 Vmware 下无法启动相机怎么解决? . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7 1.4.2 编译过程中提示有权限问题(Permerssion denied)，如Astra.cfg或者UVCCamera.cfg . . . . 7 2. Windows SDK 的安装及测试 8 2.1 Windows 驱动安装 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8 2.2 Windows Astra SDK 的安装及测试 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11 2.2.1 Windows Astra SDK 的安装 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11 2.2.2 Windows Astra SDK 示例编译 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15 2.2.3 Windows Astra SDK 示例运行 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 2.3 Windows 上 OpenNI SDK 的安装及测试 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20 2.3.1 OpenNI SDK 在 Windows 上的安装 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20 2.3.2 使用 OpenNI SDK 在 Windows 上测试 Astra Pro . . . . . . . . . . . . . . . . . . . . . . 24 3. Linux SDK 的安装及测试 25 3.1 Linux Astra SDK 的安装测试 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25 3.1.1 Linux Astra SDK 的安装 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25 3.1.2 Linux Astra SDK 示例编译 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27 3.1.3 Linux Astra SDK 示例使用 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30 3.2 Linux OpenNI SDK 的安装测试 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33 3.2.1 Linux OpenNI SDK 的安装 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33 3.2.2 Linux OpenNI SDK 示例编译 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34 3.2.3 Linux OpenNI SDK 示例运行 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36 4. NiViewer 的使用 37 4.1 启动程序 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37 4.2 NiViewer 如何打开或关闭日志打印 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37 4.3 NiViewer 如何修改分辨率 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37 4.4 NiViewer 如何镜像图像 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39 4.5 NiViewer 如何最大/最小化窗口 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40 2 4.6 NiViewer 如何开启/关闭数据流 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40 4.7 NiViewer 如何保存图片 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40 4.8 NiViewer 如何录制 oni 文件 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40 4.9 NiViewer 如何调出图像上每点的深度值 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40 3 1. Astra ROS SDK 的安装测试 1.1 Astra ROS SDK 的介绍 ros_astra_camera 是 Astra Pro 深度相机的 ROS SDK 包 目前 ros_astra_camera 仅支持 Linux 平台，且仅支持 ROS1。要在 ROS2 上使用只能使用第三方发布的 ROS2 包。本文档将使用 Ubuntu 18.04 及 ROS Melodic 作为示例安装。系统及 ROS 版本不应低于 Ubuntu 16.04 及 ROS Kinetic，因为低于该版本的软件已经过时。使用过时的软件意味着你不仅不能获得安全与维护 更新且兼容性也将面临巨大挑战，可能会遇到无法解决的问题。 1.2 Astra ROS SDK 的编译安装 后续安装步骤均在 ROS 已经安装的基础下进行，若未安装 ROS 请按这个连接 http://wiki.ros.org/melodic/I nstallation/Ubuntu 完成安装。本文档不对 ROS 的安装做说明 1. 安装依赖，执行如下命令 sudo apt update sudo apt install ros-$ROS_DISTRO-rgbd-launch \\ ros-$ROS_DISTRO-libuvc \\ ros-$ROS_DISTRO-libuvc-camera \\ ros-$ROS_DISTRO-libuvc-ros 2. 新建一个 ros 工作空间 mkdir -p ~/astra_ws/src && cd ~/astra_ws catkin_make source ~/astra_ws/devel/setup.bash 3. 如果你需要让终端每次启动时自动设置这个工作空间的环境变量需要执行下面命令。将环境变量初始化 动作加入到终端初始化文件 echo \"source $HOME/astra_ws/devel/setup.bash\" >> ~/.bashrc 4. 将 ros_astra_camera 包放入工作空间的源码目录 tar zxvf ros_astra_camera.tar.gz -C ~/astra_ws/src # 将源码包解压到工作空间src目录 5. 创建udev rule, 这一步让你可以用普通用户权限控制 Astra Pro 相机。逐一执行下面命令 cd ~/astra_ws/src/ros_astra_camera chmod a+x ./scripts/create_udev_rules ./scripts/create_udev_rules 4 6. 编译 ros_astra_camera cd ~/astra_ws catkin_make --pkg astra_camera 至此我们就完成了 Astra Pro 的 ROS SDK 的安装 1.3 Astra ROS SDK 上 Astra Pro 的测试和使用 1.3.1 如何启动相机? 执行下面命令启动相机。需要注意启动相机后只是终端模拟器会输出信息，并不会直接出现画面。显示画面 要另外操作。再roslaunch astra_camera 包中有多个 launch 文件，我们要launch 我们相机对应的文件。 roslaunch astra_camera astrapro.launch 1.3.2 如何查看相机图像？ 查看图像需要使用 rqt 工具或者 rviz 工具先启动相机，然后继续后面操作 rosrun rqt_image_view rqt_image_view # 启动 rqt_image_viewer 工具 rosrun rviz rviz # 启动 rviz 可视化工具 具体使用方法请查看视频教程 1.3.3 如何通过修改软件层来降低帧率？ 修改 /src/astra_driver.cpp 1. 修改 AstraDriver::configb 中 data_skip_ = 3, 降到 10 FPS 2. 重新编译工作空间源码, 执行 catkin_make 3. 执行 rostopic hz /camera/depth/points 查看帧率 1.3.4 如何同时启动多个相机？ 1. 先接入一个相机, 获取相机序列号 (serial number) • 正常启动相机 launch 文件 roslaunch astra_camera astrapro.launch • 执行 /camera/get_serial 服务获取相应系列号。 5 rosservice call /camera/get_serial 图 1: 获取到的相机序列号为: 17121830167 同理在接入其他同型号相机获取对应序列号 2. 修改多相机启动 launch 文件 • 例程launch： – 两台astrahttps://pan.baidu.com/s/1RVTHxXjINbdvI-xelzBfUw[提取码：7ao0] 6 1.4 可能遇到的问题及解决方法 1.4.1 Vmware 下无法启动相机怎么解决? VMware 下无法启动相机。尝试将 USB 控制器兼容性改为 USB3.1。 图 2: 修改 VMware USB 兼容性 1.4.2 编译过程中提示有权限问题(Permerssion denied)，如Astra.cfg或者UVCCamera.cfg 图 3: 提示权限问题 解决方法: 修改 astra.cfg 可执行文件(具体以你的实际文件所在路径为准 cd ~/astra_ws chmod 777 -R /src/ros_stra_camera/cfg 7 2. Windows SDK 的安装及测试 2.1 Windows 驱动安装 在 https://developer.orbbec.com.cn/download.html?id=32 下载罪行的 Window 驱动程序, 然后运行驱动程 序。 1. 点击安装开始进行安装 图 4: 驱动安装 1 2. 在驱动安装向导窗口点击”下一步” 图 5: 驱动安装 2 8 3. 看到如下窗口，说明驱动已正确安装。 图 6: 驱动安装 3 4. 安装完成后，点击”完成”按钮结束安装。 图 7: 驱动安装 4 9 5. 当完成安装驱动程序后，您可以将设备连接到PC端，然后在设备管理器中，您将看到新的orbbec设备。 图 8: 驱动安装好后的设备管理器 10 2.2 Windows Astra SDK 的安装及测试 2.2.1 Windows Astra SDK 的安装 注意: SDK 安装前请先完成驱动安装 1. 将 SDK 解压到一个文件夹，例如 $ASTRA_HOME 注意这里的 $ASTRA_HOME 只是一个代号，后面步骤用到的地方要用实际的路径替换掉或者在系 统环境变量中设置 $ASTRA_HOME变量 2. 打开或新建一个项目 3. 在 VisualStudio 菜单中，打开“项目” 菜单, 然后选择“属性” 图 9: 项目属性 11 4. 在“C/C++” 部分的常规配置项下，找到“附加包含目录” 并加入“$ASTRA_HOME\\include” 图 10: 附件包含目录 12 5. 在链接器的常规配置项下，找到“附加库目录” 并加入“$ASTRA_HOME\\lib” 和 “$ASTRA_HOME\\lib\\Plugins” 图 11: 附件库目录 13 6. 在链接器的输入配置项下， 找到 “附加依赖项”， 然后加入 astra.lib astracore.lib astracore_api.lib 14 2.2.2 Windows Astra SDK 示例编译 1. 打开 AstraSDK\\samples\\vs2015\\astra-samples.sln 项目 图 12: 示例项目路径 图 13: 打开示例项目 15 2. 选中要编译的示例，点击右键唤出右键菜单，点击“属性” 图 14: 项目属性 3. 修改“常规属性” 的平台工具集项，修改为你的 ide 对应的工具集 图 15: 平台工具集合 16 4. 修改完成后在次唤出右键菜单，点击“生成” 图 16: 生成 5. 等待编译完成 图 17: 编译成功 照例可以完其他示例的编译 17 2.2.3 Windows Astra SDK 示例运行 1. 按2.2.2 编译成功后会在 AstraSDK\\samples\\vs2015\\bin\\Debug 下生成对应的可执行文件 图 18: bin 目录 18 2. 直接双击可执行文件运行示例 图 19: SimpleStreamViewer 示例运行 图 20: SimpleBodyViewer 示例运行 3. 当然你也可以使用 Visual Studio 对项目代码镜像调试运行 19 2.3 Windows 上 OpenNI SDK 的安装及测试 2.3.1 OpenNI SDK 在 Windows 上的安装 注意: SDK安装前请先完成驱动安装 1. 将OpenNI2 SDK sdkbackslashwindows拷贝到一个目录, 将当前目录定义为 $OpenNI_SDK_HOME。 注意：这里只是定义一下，后面用到的这个目录时请将 $OpenNI_SDK_HOME 替换为你的实际目 录或者你可以修改系统环境变量添加 OpenNI_SDK_HOME 变量 2. 新建一个项目或者打开一个已存在的项目。 3. 在 Visual Studio 菜单中，打开“项目” 菜单，然后选择“项目属性”。 图 21: 项目属性 20 4. 在“C/C++” 部分的“常规” 节点下，找到“附加包含路径”，然后添加 $(OpenNI_SDK_HOME)\\Include 图 22: 添加包含路径 21 5. 在链接部分的“常规” 节点下，找到“附加库目录”，然后添加“backslashx64-Release”。 图 23: 添加库目录 22 6. 在链接部分的“输入” 节点下，找到“附加依赖项”，然后添加OpenNI2.lib。 图 24: 添加库依赖 23 2.3.2 使用 OpenNI SDK 在 Windows 上测试 Astra Pro 在 $backslash$64-Release 下，运行 NiViewer.exe 将将看到下面画面。具体使用方法请参考第四章节 图 25: 运行 NiViewer 24 3. Linux SDK 的安装及测试 本章节所有示例操作均在 Ubuntu 18.04 x86_64 环境下进行。 Linux 下不需要专门安装驱动，只需安装 SDK 即可。 3.1 Linux Astra SDK 的安装测试 3.1.1 Linux Astra SDK 的安装 1. 将与你的系统环境对应的 SDK 源码包复制到开发环境的用户家目录下。你可以在这里 https://develope r.orbbec.com.cn/download.html?id=53 下载各个环境 SDK 源码包。 下图是x86_64的包 图 26: Linux Astra SDK 源码包 2. 执行下面命令解压 SDK 源码包 mkdir AstraSDK # 建立 SDK 的安装目录 tar xf AstraSDK-v*.tar.gz -C ./AstraSDK --strip-components=1 # 上面的 * 为通配符，你可以直接将这段替换为你的文件的完整名字 # 这条命令是将压缩包解压到我们的安装目录 图 27: Linux Astra SDK 源码包解压 3. 执行下面命令给安装脚本加上可执行权限 cd AstraSDK chmod a+x install/install.sh 4. 执行下面命令进行安装 25 图 28: 给安装脚本加上可执行权限 ./install/install.sh 图 29: 进行安装 5. 执行下面命令设置环境变量 cat \"export ASTRA_SDK_INCLUDE=$HOME/AstraSDK/include\" >> ~/.bashrc cat \"export ASTRA_SDK_LIB=$HOME/AstraSDK/lib\" >> ~/.bashrc 这里的 $HOME 是 shell 里面的一个变量，是当前用户家目录的绝对路径。 这一步其实是将上一步执行 install.sh 脚本后最后输出的两行去掉了其中的“install/” 写入了 .bashrc 文件中。如果你的安装路径不是按照本文档进行，请根据实际情况将路径改为你自己的正确路径。 图 30: 环境变量设置 执行完之后我们可以用cat命令看一下 .bashrc 文件最后两行有没有修改好。如果没有修改好可以直接用 文本编辑器重新修改。 cat ~/.bashrc |tail -n2 至此 Linux Astra SDK 已经安装好，但是我们需要关闭当前终端，打开个新的终端环境变量才会生效。 因为 .bashrc 只有在一个终端启动时才会被执行。 26 图 31: 修改后的 .bashrc 文件的最后两行 3.1.2 Linux Astra SDK 示例编译 Linux Astra SDK 提供了一些示例程序，我们可以用这些示例程序来测试我们的 SDK 安装是否正确及相机工 作是否正常。我们需要先编译这些示例。在进行编译前请确认 SDK 已经按本文档所诉完成了安装。 1. 安装依赖 sudo apt update sudo apt install build-essential libsfml-dev 如果在编译过程中提示缺少其他依赖需要按错误提示再进行安装 图 32: 依赖安装完毕 27 2. 执行下面命令建立并进入编译目录 mkdir ~/AstraSDK/samples/build cd ~/AstraSDK/samples/build 图 33: 建立并进入编译目录 3. 执行下面命令建立tools目录 mkdir ~/AstraSDK/samples/tools touch ~/AstraSDK/samples/CMakeLists.txt 这一步其实没有实际所用，但是没有这个目录 cmake 会报错。如果你是新手请直接照做即可。你也可 以删除 ~/AstraSDK/samples/CMakeLists.txt 第140行达到同样效果。 4. 执行下面命令进行编译 cmake .. -DASTRA_UNIX=TRUE # -DASTRA_UNIX=TRUE 是告诉 cmake 编译类 unix 平台的示例 make -j5 # j 是编译的时候使用的线程数，可以是你的 cpu 核心数量 +1 图 34: 正确执行完毕 5. 检查编译结果 编译完成后可以用 ls 命令查看 build 目录和 build/bin 目录。 我们可以可以看到 build/bin 目录下有一些可执行文件，这些可执行文件就是编译后的示例程序。我们 可以执行这些程序来测试我们的相机效果。 28 图 35: make 正在执行 图 36: make 正确执行完毕 图 37: 编译后的 build 及 build/bin 目录 29 3.1.3 Linux Astra SDK 示例使用 我们可以运行 ~/AstraSDK/sample/build/bin 下的可执行文件来测试相机的使用可以 cd 到 bin 目录后然后 执行各个可执行文件，测试效果。运行前记得将相机连接到机器上再运行。你可以用 lsusb 命令查看 usb 设 备连接情况。 • 这里列出其中几个的效果 – SimpleColorViewer-SFML 查看RGB画面 – SimpleDepthViewer-SFML 查看深度画面 – SimpleStreamViewer-SFML 同时查看多个画面 – SimpleBodyViewer-SFML 查看人体骨架识别画面 图 38: lsusb AstraPro 对应两个 USB 设备 图 39: cd 进 bin 目录 图 40: 运行 SimpleColorViewer-SFML 的命令行输出 30 图 41: 运行 SimpleDepthViewer-SFML 画面输出 图 42: 运行 SimpleStreamViewer-SFML 画面输出 31 图 43: 运行 SimpleBodyViewer-SFML 画面输出 32 3.2 Linux OpenNI SDK 的安装测试 3.2.1 Linux OpenNI SDK 的安装 1. 将与你的系统环境应的 SDK 源码包复制到开发环境的用户家目录下。你可以在这里 https://developer. orbbec.com.cn/download.html?id=64 下载到各个环境对应的 SDK 源码包 图 44: 源码包 2. 执行下面命令解压源码包 mkdir OpenNI # 建立安装目录 unzip -d ~/OpenNI OpenNI_*.zip # 将文件解压到安装目录 mv ~/OpenNI/OpenNI_*/* ~/OpenNI # 将解压出的文件移动到安装目录的顶层 rm -rf ~/OpenNI/OpenNI_* # 删除掉已经移出所有文件空文件夹 图 45: 解压及重命名操作 图 46: 操作完成后的 ~/OpenNI 目录 33 3. 执行下面命令安装依赖库 sudo apt update sudo apt install freeglut3 至此 OpenNI 安装完毕。 后面开发中要对项目进行的MakeFile做一些设置 • 在包含目录中加入头文件Include目录 INC_DIRS = $HOME/OpenNI/sdk/Include • 在使用的LIb中加入OpenNI2 USED_LIBS += OpenNI2 3.2.2 Linux OpenNI SDK 示例编译 1. 执行下面命令安装依赖 sudo apt update sudo apt install freeglut3-dev libudev-dev libusb-1.0-0-dev 2. 编译示例程序 cd ~/OpenNI/samples/samples sudo cp ThirdParty/OpenCV420/Linux/lib/libpng12.so.0 /usr/lib/x86_64-linux-gnu ./sample_build.sh x86_64 # 一定要指定硬件平台 第二步复制文件因为 Ubuntu18.04 安装的 libpng 库版本不兼容，我们直接给他复制进系统。也可以修 改 LD_LIBRARY_PATH 达到同样目的。 图 47: 开始编译 3. 编译结果编译成功后在 ~/OpenNI/samples/samples/build/bin 会有各个示例的可执行文件。我们可以 测试运行这些示例。 34 图 48: 编译中 图 49: 编译完成 图 50: 编译完成 35 3.2.3 Linux OpenNI SDK 示例运行 先将相机连接到机器然后 cd 进 cd ~/OpenNI/samples/samples/build/bin 目录然后执行要运行的可执行文件 图 51: 运行 SimpleViewer 的命令行 图 52: 运行 SimpleViewer 画面输出 36 4. NiViewer 的使用 4.1 启动程序 1. Linux 启动 cd ~/OpenNI/tools/NiViewer chmod a+x NiViewer 图 53: Linux 下的 NiViewer 2. 进入OpenNi/Win64-Release/tools/NiViewer 目录下双击执行 图 54: Windows 下的 NiViewer 4.2 NiViewer 如何打开或关闭日志打印 修改 niviewer 同目录下的 OpenNI.ini 配置文件。 • 打开Log输出：将Verbosity, LogToConsole, LogToFile的” ; ” 去掉 • 关闭Log输出：将所有属性前面加上” ; ” (即恢复默认值) 4.3 NiViewer 如何修改分辨率 1. 方法一 修改 niviewer 同目录下的 /Niviewer/OpenNI2/Drivers/orbbec.ini 文件 37 图 55: Windows 下的 NiViewer 2. 方法二 启动Niviewer，鼠标右键调出菜单，选择合适分辨率 38 4.4 NiViewer 如何镜像图像 1. 方法一修改 niviewer 同目录下的 /Niviewer/OpenNI2/Drivers/orbbec.ini 文件 2. 方法二 启动Niviewer，鼠标右键调出菜单，选择打开或者关闭镜像 39 4.5 NiViewer 如何最大/最小化窗口 启动Niviewer, 点击键盘快捷键字母“F”。 4.6 NiViewer 如何开启/关闭数据流 启动 Niviewer, 鼠标调出右键菜单, 选择打开或者关闭相应 Sensor 数据流。 图 56: 关闭 Depth 流 4.7 NiViewer 如何保存图片 启动 NiViewer, 点击键盘字母“C”, 保存当前的 raw 格式图片到同级目录 CaptureFrames 下。 4.8 NiViewer 如何录制 oni 文件 启动 NiViewer, 点击键盘字母“S”。选择自定义位置保存oni格式，任意键停止oni文件录制。 4.9 NiViewer 如何调出图像上每点的深度值 启动 NiViewer, 点击键盘字母“P”。鼠标放在深度图上任意点可以显示相应深度值。 40","libVersion":"0.3.2","langs":""}
