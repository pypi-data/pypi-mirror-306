# coding: utf-8

"""
    Secore API

    API for the Seres core platform

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from seres_client.models.paginated_response_schema_flight_plan_schema_schema import PaginatedResponseSchemaFlightPlanSchemaSchema

class TestPaginatedResponseSchemaFlightPlanSchemaSchema(unittest.TestCase):
    """PaginatedResponseSchemaFlightPlanSchemaSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedResponseSchemaFlightPlanSchemaSchema:
        """Test PaginatedResponseSchemaFlightPlanSchemaSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedResponseSchemaFlightPlanSchemaSchema`
        """
        model = PaginatedResponseSchemaFlightPlanSchemaSchema()
        if include_optional:
            return PaginatedResponseSchemaFlightPlanSchemaSchema(
                items = [
                    seres_client.models.flight_plan_schema_schema.FlightPlanSchemaSchema(
                        type = 'partial', 
                        flight_plan_type = 'refuel', 
                        reference = '', 
                        waypoints = [
                            seres_client.models.flight_plan_schema_waypoint_schema.FlightPlanSchemaWaypointSchema(
                                reference = '', 
                                port_id = 56, 
                                coordinate = seres_client.models.waypoint_coordinate_schema.WaypointCoordinateSchema(
                                    longitude = '', 
                                    latitude = '', 
                                    altitude = '', 
                                    elevation = '', ), 
                                flight_plan_schema_id = 56, 
                                id = 56, 
                                port_name = '', )
                            ], 
                        legs = [
                            seres_client.models.flight_plan_schema_leg_schema.FlightPlanSchemaLegSchema(
                                meta_order = 56, 
                                critical = True, 
                                average_speed = '', 
                                duration_seconds = 56, 
                                resource_schema_action_schema_ids = [
                                    56
                                    ], 
                                origin_waypoint_id = 56, 
                                flight_plan_schema_id = 56, 
                                id = 56, 
                                destination_waypoint_id = 56, 
                                meta_previous_leg_id = 56, 
                                meta_next_leg_id = 56, 
                                is_launch = True, 
                                is_landing = True, )
                            ], 
                        revision_of_id = 56, 
                        variation_of_id = 56, 
                        id = 56, 
                        account_id = 56, 
                        status = 'new', )
                    ],
                has_next = True,
                has_prev = True,
                next_num = 56,
                prev_num = 56,
                page = 56,
                pages = 56,
                total = 56,
                per_page = 56
            )
        else:
            return PaginatedResponseSchemaFlightPlanSchemaSchema(
                items = [
                    seres_client.models.flight_plan_schema_schema.FlightPlanSchemaSchema(
                        type = 'partial', 
                        flight_plan_type = 'refuel', 
                        reference = '', 
                        waypoints = [
                            seres_client.models.flight_plan_schema_waypoint_schema.FlightPlanSchemaWaypointSchema(
                                reference = '', 
                                port_id = 56, 
                                coordinate = seres_client.models.waypoint_coordinate_schema.WaypointCoordinateSchema(
                                    longitude = '', 
                                    latitude = '', 
                                    altitude = '', 
                                    elevation = '', ), 
                                flight_plan_schema_id = 56, 
                                id = 56, 
                                port_name = '', )
                            ], 
                        legs = [
                            seres_client.models.flight_plan_schema_leg_schema.FlightPlanSchemaLegSchema(
                                meta_order = 56, 
                                critical = True, 
                                average_speed = '', 
                                duration_seconds = 56, 
                                resource_schema_action_schema_ids = [
                                    56
                                    ], 
                                origin_waypoint_id = 56, 
                                flight_plan_schema_id = 56, 
                                id = 56, 
                                destination_waypoint_id = 56, 
                                meta_previous_leg_id = 56, 
                                meta_next_leg_id = 56, 
                                is_launch = True, 
                                is_landing = True, )
                            ], 
                        revision_of_id = 56, 
                        variation_of_id = 56, 
                        id = 56, 
                        account_id = 56, 
                        status = 'new', )
                    ],
                has_next = True,
                has_prev = True,
                page = 56,
                pages = 56,
                total = 56,
                per_page = 56,
        )
        """

    def testPaginatedResponseSchemaFlightPlanSchemaSchema(self):
        """Test PaginatedResponseSchemaFlightPlanSchemaSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
